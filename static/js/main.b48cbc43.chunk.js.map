{"version":3,"sources":["pages/AlbumPage/Speak To MeBreathe.mp3","pages/AlbumPage/On The Run.mp3","components/AddTrackToPlaylistModal/AddTrackToPlaylistModal.js","pages/AlbumPage/AlbumPage.js","components/NewPlaylistModal/NewPlaylistModal.js","components/NamePlaylistModal/NamePlaylistModal.js","pages/PlaylistPage/On The Run.mp3","components/RemoveTrackModal/RemoveTrackModal.js","components/RemovePlaylistModal/RemovePlaylistModal.js","pages/PlaylistPage/PlaylistPage.js","pages/AllPlaylistsPage/AllPlaylistsPage.js","components/AlbumCard/AlbumCard.js","pages/ArtistPage/ArtistPage.js","pages/FavoriteAlbumsPage/FavoriteAlbumsPage.js","pages/FavoriteArtistsPage/FavoriteArtistsPage.js","pages/HomePage/HomePage.js","pages/LandingPage/LandingPage.js","pages/SearchingPage/SearchingPage.js","components/MyMusicNavbar/logo.jpg","components/MyMusicNavbar/MyMusicNavbar.js","pages/LoginPage/LoginPage.js","pages/SignupPage/SignupPage.js","model/UserModel.js","model/AlbumModel.js","model/ArtistModel.js","model/TrackModel.js","model/PlaylistModel.js","App.js","reportWebVitals.js","index.js"],"names":["AddTrackToPlaylistModal","playlists","trackAdd","show","onClose","onAddTrack","useState","currPlaylist","setCurrPlaylist","Modal","className","onHide","Header","closeButton","Title","Body","Form","Group","Label","Control","as","custom","value","onChange","e","target","map","playlist","title","id","Footer","Button","variant","onClick","AlbumPage","activeUser","albums","tracks","artists","addTrack","handlePlayTrack","index","useParams","trackPlay","setTrackPlay","showAddTrackModal","setShowAddTrackModal","setTrackAdd","currentAlbum","currentArtist","find","artist","artistId","albumTracks","filter","track","albumId","useEffect","audioUrl","process","file","audioObj","Audio","play","pause","i","name","year","genre","src","image","length","Table","striped","bordered","hover","size","handleAddTrack","trackList","includeTags","includeSearch","showPlaylist","autoPlayNextTrack","to","NewPlaylistModal","onCreate","playlistName","setPlaylistName","Row","controlId","column","sm","Col","type","NamePlaylistModal","onEdit","RemoveTrackModal","onRemove","RemovePlaylistModal","redirectToAllPlaylists","setRedirectToAllPlaylists","PlaylistPage","onEditPlaylist","onRemoveTrack","onRemovePlaylist","currentPlaylist","showNamePlaylistModal","setShowNamePlaylistModal","showRemoveTrackModal","setShowRemoveTrackModal","trackRemove","setTrackRemove","showRemovePlaylistModal","setShowRemovePlaylistModal","redirectToHome","setRedirectToHome","currentTracks","tracksId","includes","handleOnClick","AllPlaylistsPage","onAddPlaylist","showNewPlaylistModal","setShowNewPlaylistModal","userPlaylists","userId","active","AlbumCard","album","albumIndex","artistIndex","Card","Img","Text","ArtistPage","artistAlbums","md","FavoriteAlbumsPage","FavoriteArtistsPage","HomePage","filterText","setFilterText","artistsId","toLowerCase","filteredAlbums","rockAlbumsCards","popAlbumsCards","rbAlbumsCards","jazzAlbumsCards","placeholder","LandingPage","SearchingPage","MyMusicNavbar","onLogout","Navbar","expand","Brand","href","logoImg","width","Toggle","aria-controls","Collapse","Nav","Link","LoginPage","users","onLogin","email","setEmail","password","setPassword","showInvalidLogin","setshowInvalidLogin","onSubmit","preventDefault","user","login","Alert","SignupPage","addUser","setName","UserModel","plainUser","this","AlbumModel","plainAlbum","ArtistModel","plainArtist","TrackModel","plainTrack","url","tags","PlaylistModel","plainPlaylist","App","usersJSON","setUsers","setActiveUser","albumsJSON","artistsJSON","tracksJSON","setTracks","playlistsJSON","setPlaylists","tempTracks","exact","path","newUser","concat","playlistId","tempPlaylists","push","newPlaylist","trackId","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b48cbc43.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Speak To MeBreathe.a4c93e5e.mp3\";","export default __webpack_public_path__ + \"static/media/On The Run.97104736.mp3\";","import React, { useState } from 'react';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\nimport './AddTrackToPlaylistModal.css';\r\n\r\nfunction AddTrackToPlaylistModal({ playlists, trackAdd, show, onClose, onAddTrack }) {\r\n    const [currPlaylist, setCurrPlaylist] = useState(playlists[0]);\r\n\r\n    function AddTrackToPlaylist() {\r\n        debugger;\r\n            onAddTrack(currPlaylist.id, trackAdd);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"m-add-track\" show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add track to your playlist</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Choose playlist</Form.Label>\r\n                        <Form.Control as=\"select\" custom value={currPlaylist} onChange={e => setCurrPlaylist(e.target.value)}>\r\n                            {playlists.map(playlist => <option key={playlist.id} >{playlist.title}</option>)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={AddTrackToPlaylist}>\r\n                    Add\r\n      </Button>\r\n\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AddTrackToPlaylistModal;","import React, { useEffect } from 'react';\r\nimport { ListGroup, Row, Spinner, Table, Button } from 'react-bootstrap';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport './AlbumPage.css';\r\nimport { FaPlay, FaPause, FaPlus, FaPauseCircle, FaPlayCircle, FaPlusCircle } from \"react-icons/fa\";\r\nimport { useState } from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport Player from '@madzadev/audio-player';\r\nimport '@madzadev/audio-player/dist/index.css';\r\nimport audio1 from './Speak To MeBreathe.mp3';\r\nimport audio2 from './Speak To MeBreathe.mp3';\r\nimport audio3 from './On The Run.mp3';\r\nimport AddTrackToPlaylistModal from '../../components/AddTrackToPlaylistModal/AddTrackToPlaylistModal';\r\n\r\n\r\nfunction AlbumPage({ activeUser, albums, tracks, artists, playlists, handlePlayTrack , addTrack}) {\r\n    const { index } = useParams();\r\n    const [trackPlay, setTrackPlay] = useState(null);\r\n    const [showAddTrackModal, setShowAddTrackModal] = useState(false);\r\n    const [trackAdd, setTrackAdd] = useState(null);\r\n\r\n    const currentAlbum = albums[index];\r\n    const currentArtist = artists.find(artist => artist.id === currentAlbum.artistId);\r\n\r\n    const albumTracks = tracks.filter(track => track.albumId === currentAlbum.id);\r\n\r\n    // const[trackList,setTrackList] = useState(albumTracks);\r\n\r\n    useEffect(() => {\r\n        if (trackPlay) {\r\n            const audioUrl = process.env.PUBLIC_URL + trackPlay.file;\r\n            const audioObj = new Audio(audioUrl);\r\n            audioObj.play();\r\n\r\n            // setTrackList(albumTracks.slice(trackPlay.id-1));\r\n\r\n            return () => {\r\n                audioObj.pause();\r\n                // setTrackList(albumTracks);\r\n            }\r\n        }\r\n    }, [trackPlay])\r\n\r\n\r\n    //track num\r\n    let i = 1;\r\n\r\n    // let currentTrack ; //= tracks[0]\r\n\r\n    function playTrack(id, value) {\r\n        if (value) {\r\n            setTrackPlay(tracks.find(track => track.id === id));\r\n        } else {\r\n            setTrackPlay(null);\r\n        }\r\n\r\n        // handlePlayTrack(id, value);\r\n        // //play / pause track\r\n        // currentTrack = tracks.find(track => track.id === id);\r\n        // let audioObj = new Audio(currentTrack.file);\r\n        // if (currentTrack.play) {\r\n        //     audioObj.play();\r\n        // } else {\r\n        //     audioObj.pause(); //not working\r\n        // }\r\n    }\r\n\r\n    function handleAddTrack(track) {\r\n        setShowAddTrackModal(true);\r\n        setTrackAdd(track);\r\n    }\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"p-album\">\r\n            <div className=\"album-row\">\r\n                <div className=\"album-details\">\r\n                    <h1>{currentAlbum.title}</h1>\r\n                    <h3>{currentArtist.name}</h3>\r\n                    <h5>{currentAlbum.year}</h5>\r\n                    <h5>{currentAlbum.genre}</h5>\r\n                </div>\r\n                <div className=\"album-img\">\r\n                    <img src={currentAlbum.image} />\r\n                </div>\r\n            </div>\r\n\r\n            {albumTracks.length > 0 ?\r\n                <div className=\"album-row\">\r\n                    <h4>Track Listing</h4>\r\n                    <div className=\"album-tracks\">\r\n\r\n                        <Table striped bordered hover size=\"sm\" variant=\"dark\">\r\n                            <tbody>\r\n                                {albumTracks.map(track =>\r\n                                    <tr key={track.id}>\r\n                                        <td>{i++}</td>\r\n                                        <td>{track.title}</td>\r\n                                        <td>{track.length}</td>\r\n                                        <td className=\"td-btn\">\r\n                                            <a className=\"tracks-btn\" onClick={() => playTrack(track.id, !(trackPlay && trackPlay.id === track.id))}>\r\n                                                {trackPlay && trackPlay.id === track.id ? <FaPauseCircle /> : <FaPlayCircle />}\r\n                                            </a></td>\r\n                                        <td className=\"td-btn\"><FaPlusCircle  className=\"tracks-btn\" onClick={() => handleAddTrack(track)}/></td>\r\n\r\n                                    </tr>)}\r\n                            </tbody>\r\n                        </Table>\r\n\r\n                    </div>\r\n                </div>\r\n                : null}\r\n\r\n            {/* <ReactAudioPlayer src={currentTrack} autoPlay controls/> */}\r\n\r\n            {/* {albumTracks.length > 0 ? */}\r\n            <Player trackList={albumTracks}\r\n                includeTags={true}\r\n                includeSearch={false}\r\n                showPlaylist={false}\r\n                autoPlayNextTrack={true} />\r\n            {/* : null} */}\r\n            <AddTrackToPlaylistModal show={showAddTrackModal} onClose={() => setShowAddTrackModal(false)} playlists={playlists} trackAdd={trackAdd} onAddTrack={addTrack}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlbumPage;","import React, { useState } from 'react';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport './NewPlaylistModal.css';\r\n\r\nfunction NewPlaylistModal({ show, onClose, onCreate }) {\r\n    const [playlistName , setPlaylistName] = useState(\"\");\r\n\r\n    function createPlaylist () {\r\n        setPlaylistName(\"\");\r\n        onCreate(playlistName);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"m-new-playlist\" show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add a new playlist</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"formPlaylistTitle\">\r\n                        <Form.Label column sm={3}>\r\n                            Playlist name\r\n                        </Form.Label>\r\n                        <Col sm={9}>\r\n                            <Form.Control type=\"text\" value={playlistName} onChange={e => setPlaylistName(e.target.value)}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={createPlaylist}>\r\n                    Add\r\n          </Button>\r\n\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default NewPlaylistModal;","import React, { useState } from 'react';\r\nimport { Row, Col, Form, Modal, Button } from 'react-bootstrap';\r\nimport './NamePlaylistModal.css';\r\n\r\nfunction NamePlaylistModal({ playlist , show, onClose ,onEdit }) {\r\n    const [playlistName , setPlaylistName] = useState(\"\");\r\n\r\n     function editPlaylist () {\r\n        setPlaylistName(\"\");\r\n        onEdit(playlist.id , playlistName);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"m-name-playlist\" show={show} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Rename playlist</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n                <Form.Group as={Row} controlId=\"formPlaylistTitle\">\r\n                    <Form.Label column sm={3}>\r\n                        Playlist name\r\n                    </Form.Label>\r\n                    <Col sm={9}>\r\n                        <Form.Control type=\"text\" value={playlistName} onChange={e => setPlaylistName(e.target.value)}/>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={editPlaylist}>\r\n                Save\r\n      </Button>\r\n\r\n        </Modal.Footer>\r\n    </Modal>\r\n    );\r\n}\r\n\r\nexport default NamePlaylistModal;","export default __webpack_public_path__ + \"static/media/On The Run.97104736.mp3\";","import React, { useState } from 'react';\r\nimport { Modal, Form, Row, Col, Button } from 'react-bootstrap';\r\nimport './RemoveTrackModal.css';\r\n\r\nfunction RemoveTrackModal({ playlist, track, show, onClose, onRemove }) {\r\n\r\n    function removeTrackFromPlaylist() {\r\n        onRemove(playlist.id , track.id);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"m-remove-track\" show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Remove this track from {playlist? playlist.title : \"\"} ?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                  {track? track.title :\"\"} \r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={removeTrackFromPlaylist}>Remove</Button>\r\n      <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default RemoveTrackModal;","import React, { useState } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport './RemovePlaylistModal.css';\r\n\r\nfunction RemovePlaylistModal({ playlist, show, onClose, onRemove }) {\r\n    const [redirectToAllPlaylists, setRedirectToAllPlaylists] = useState(false);\r\n\r\n    function removePlaylist() {\r\n        onRemove(playlist.id);\r\n        onClose();\r\n        setRedirectToAllPlaylists(true);\r\n    }\r\n\r\nif(redirectToAllPlaylists){\r\n    return <Redirect to=\"/all-playlists\" /> \r\n}\r\n\r\n    return (\r\n        <Modal className=\"m-remove-playlist\" show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Delete this playlist?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {playlist.title}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={removePlaylist}>Remove</Button>\r\n                <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default RemovePlaylistModal;","import React, { useEffect, useState } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { FaMinusCircle, FaPauseCircle, FaPlayCircle, FaPlusCircle, FaRegEdit } from 'react-icons/fa';\r\nimport './PlaylistPage.css';\r\nimport Player from '@madzadev/audio-player'\r\nimport '@madzadev/audio-player/dist/index.css'\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport NamePlaylistModal from '../../components/NamePlaylistModal/NamePlaylistModal';\r\nimport audio3 from './On The Run.mp3';\r\nimport RemoveTrackModal from '../../components/RemoveTrackModal/RemoveTrackModal';\r\nimport RemovePlaylistModal from '../../components/RemovePlaylistModal/RemovePlaylistModal';\r\nimport AddTrackToPlaylistModal from '../../components/AddTrackToPlaylistModal/AddTrackToPlaylistModal';\r\n\r\nfunction PlaylistPage({ activeUser, playlists, tracks, handlePlayTrack, onEditPlaylist, onRemoveTrack, onRemovePlaylist }) {\r\n\r\n    const { index } = useParams();\r\n    const currentPlaylist = playlists[index - 1];\r\n    const [showNamePlaylistModal, setShowNamePlaylistModal] = useState(false);\r\n    const [trackPlay, setTrackPlay] = useState(null);\r\n    const [showRemoveTrackModal, setShowRemoveTrackModal] = useState(false);\r\n    const [trackRemove, setTrackRemove] = useState(null);\r\n    const [showRemovePlaylistModal, setShowRemovePlaylistModal] = useState(false);\r\n    const [redirectToHome, setRedirectToHome] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (trackPlay) {\r\n            const audioUrl = process.env.PUBLIC_URL + trackPlay.file;\r\n            const audioObj = new Audio(audioUrl);\r\n            audioObj.play();\r\n\r\n            return () => {\r\n                audioObj.pause();\r\n            }\r\n        }\r\n    }, [trackPlay])\r\n\r\n\r\n    const currentTracks = tracks.filter(track => currentPlaylist.tracksId.includes(track.id));\r\n\r\n    let i = 1;\r\n    let currentTrack;\r\n\r\n    function playTrack(id, value) {\r\n        if (value) {\r\n            setTrackPlay(tracks.find(track => track.id === id));\r\n        } else {\r\n            setTrackPlay(null);\r\n        }\r\n    }\r\n\r\n    function handleOnClick(track) {\r\n        setShowRemoveTrackModal(true);\r\n        setTrackRemove(track);\r\n    }\r\n\r\n    if (!activeUser){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    if  (redirectToHome){\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-playlist\">\r\n            {/* {currentPlaylist ? */}\r\n            <div className=\"icons-btn\">\r\n                <FaPlayCircle className=\"icon-btn\" />\r\n                <FaPlusCircle className=\"icon-btn\" onClick={() => setRedirectToHome(true)} />\r\n                <FaMinusCircle className=\"icon-btn\" onClick={() => setShowRemovePlaylistModal(true)} />\r\n                <FaRegEdit className=\"icon-btn\" onClick={() => setShowNamePlaylistModal(true)} />\r\n            </div>\r\n            <h1>{currentPlaylist.title}</h1>\r\n            {/* : null} */}\r\n            {currentTracks.length > 0 ?\r\n                <div className=\"playlist-tbl\">\r\n                    <Table striped bordered hover size=\"sm\" variant=\"dark\">\r\n                        <tbody>\r\n                            {currentTracks.map(track =>\r\n                                <tr>\r\n                                    <td>{i++}</td>\r\n                                    <td>{track.title}</td>\r\n                                    <td>{track.length}</td>\r\n                                    {/* <td className=\"td-btn\"><a className=\"tracks-btn\" onClick={() => playTrack(track.id, !track.play)}>{!track.play ? <FaPlayCircle /> : <FaPauseCircle />}</a></td> */}\r\n                                    <td className=\"td-btn\"><a className=\"tracks-btn\" onClick={() => playTrack(track.id, !(trackPlay && trackPlay.id === track.id))}>\r\n                                        {trackPlay && trackPlay.id === track.id ? <FaPauseCircle /> : <FaPlayCircle />}</a></td>\r\n                                    <td className=\"td-btn\"><a className=\"tracks-btn\" onClick={() => handleOnClick(track)}><FaMinusCircle /></a></td>\r\n                                </tr>)}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                : null}\r\n\r\n            {currentTracks.length > 0 ?\r\n                <Player\r\n                    trackList={currentTracks}\r\n                    includeTags={true}\r\n                    includeSearch={false}\r\n                    showPlaylist={false}\r\n                    autoPlayNextTrack={true} />\r\n                : null}\r\n            <NamePlaylistModal show={showNamePlaylistModal} onClose={() => setShowNamePlaylistModal(false)} onEdit={onEditPlaylist} playlist={currentPlaylist} />\r\n            <RemoveTrackModal show={showRemoveTrackModal} onClose={() => setShowRemoveTrackModal(false)} onRemove={onRemoveTrack} playlist={currentPlaylist} track={trackRemove} />\r\n            <RemovePlaylistModal show={showRemovePlaylistModal} onClose={() => setShowRemovePlaylistModal(false)} onRemove={onRemovePlaylist} playlist={currentPlaylist} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlaylistPage;","import React, { useState } from 'react';\r\nimport { ListGroup, Table } from 'react-bootstrap';\r\nimport { FaPlusCircle, FaRegHeart } from 'react-icons/fa';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport NewPlaylistModal from '../../components/NewPlaylistModal/NewPlaylistModal';\r\nimport PlaylistPage from '../PlaylistPage/PlaylistPage';\r\nimport './AllPlaylistsPage.css';\r\n\r\nfunction AllPlaylistsPage({ activeUser, playlists, onAddPlaylist }) {\r\n    const [showNewPlaylistModal , setShowNewPlaylistModal] = useState(false);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const userPlaylists = playlists.filter(playlist => playlist.userId === activeUser.id);\r\n\r\n    //playlist num\r\n    let i = 1;\r\n\r\n    return (\r\n        <div className=\"p-all-playlists\">\r\n            {/* <div className=\"row\"> */}\r\n                <FaPlusCircle className=\"plus-icon\" onClick={() => setShowNewPlaylistModal(true)}/>\r\n                <h1>My Playlists</h1>\r\n            {/* </div> */}\r\n            {userPlaylists.length > 0 ?\r\n                <div className=\"playlists-tbl\">\r\n                    <Table striped bordered hover size=\"sm\" variant=\"dark\">\r\n                        <tbody>\r\n                            {userPlaylists.map(playlist =>\r\n                            playlist.active ? \r\n                                <tr>\r\n                                    <td>{i++}</td>\r\n                                    <td><Link to={\"/playlist/\" + playlist.id} className=\"playlist-link\">{playlist.title}</Link></td>\r\n                                </tr>\r\n                                : null                          \r\n                                )}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                : null}\r\n                <NewPlaylistModal show={showNewPlaylistModal} onClose={() => setShowNewPlaylistModal(false)} onCreate={onAddPlaylist} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllPlaylistsPage;","import React from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './AlbumCard.css';\r\nimport AlbumPage from '../../pages/AlbumPage/AlbumPage';\r\nimport ArtistPage from '../../pages/ArtistPage/ArtistPage';\r\n\r\n\r\nfunction AlbumCard({ album , artist}) {\r\n    \r\n    const albumIndex = album.id-1;\r\n    const artistIndex = artist.id-1;\r\n\r\n    //     if (index !== undefined) {\r\n    //     return <Redirect to={'/album/' + index}/>\r\n    // }\r\n\r\n    return (\r\n        <Card className=\"album-card\">\r\n            <Card.Img className=\"album-img\" variant=\"top\" src={album.image} />\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <Link to={\"/album/\" + albumIndex} className=\"album-link\">{album.title}</Link>\r\n                </Card.Title>\r\n                <Card.Text> \r\n                    <Link to={\"/artist/\" + artistIndex} className=\"artist-link\"> {artist.name}</Link>  \r\n                    </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default AlbumCard;","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport AlbumCard from '../../components/AlbumCard/AlbumCard';\r\nimport './ArtistPage.css';\r\n\r\nfunction ArtistPage({ activeUser , artists, albums}) {\r\n    const { index } = useParams();\r\n    const currentArtist = artists[index];\r\n    const artistAlbums = albums.filter( album => album.artistId === currentArtist.id);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"p-artist\">\r\n                <div className=\"artist\">\r\n                    <h1>{currentArtist.name}</h1>\r\n                    <img className=\"artist-img\" src={currentArtist.image} />\r\n                </div>\r\n                <div className=\"artist-albums\">\r\n                {artistAlbums.length > 0 ?\r\n                    <Row>\r\n                        {artistAlbums.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={currentArtist}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArtistPage;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction FavoriteAlbumsPage({activeUser}) {\r\n    if(!activeUser){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n        <div>\r\n            FavoriteAlbumsPage\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FavoriteAlbumsPage;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction FavoriteArtistsPage({activeUser}) {\r\n    if(!activeUser){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n        <div>\r\n            FavoriteArtistsPage\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FavoriteArtistsPage;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Col, Form, Row, Spinner } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport './HomePage.css';\r\nimport AlbumCard from '../../components/AlbumCard/AlbumCard';\r\n\r\nfunction HomePage({ activeUser, albums, artists }) {\r\n    const [filterText, setFilterText] = useState(\"\");\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n   // write here code that converts the artists array into artists object\r\n    const artistsMap =[];  //.... artists;\r\n    \r\n    // for (let i=0; i<artists.length; i++){\r\n    //     // const index = i+1;\r\n    //     const artist = {i: artists[i]};\r\n    //     artistsMap.push(artist);\r\n    // }\r\n    \r\n    // debugger;\r\n\r\n    const filterArtists = artists.filter(artist => artist.name.toLowerCase().includes(filterText.toLowerCase()));\r\n    const artistsId = filterArtists.map(artist => artist.id);\r\n\r\n    const filteredAlbums = albums.filter(album => album.title.toLowerCase().includes(filterText.toLowerCase()) || artistsId.includes(album.artistId) );  \r\n\r\n\r\n    //albums by genre\r\n    const rockAlbumsCards = filteredAlbums.filter(album => album.genre === \"Rock\");\r\n    const popAlbumsCards = filteredAlbums.filter(album => album.genre === \"Pop\");\r\n    const rbAlbumsCards = filteredAlbums.filter(album => album.genre === \"R&B\");\r\n    const jazzAlbumsCards = filteredAlbums.filter(album => album.genre === \"Jazz\");\r\n\r\n    // const albumsCards = filteredAlbums.map(album => <Col sm={6} md={2} > <AlbumCard album={album} /></Col>);\r\n\r\n    return (\r\n        <div className=\"p-home\">\r\n            <div className=\"home-search\">\r\n                <h1>Find your music</h1>\r\n                <Form>\r\n                    <Form.Control type=\"text\" className=\"filter\" placeholder=\"Search album \\ artist\" value={filterText} onChange={e => setFilterText(e.target.value)} />\r\n                </Form>\r\n            </div>\r\n            <div className=\"albums-cards\">\r\n                {rockAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>Rock</h4>\r\n                        {rockAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                        {/* artist={artistsMap[album.artistId]} */}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                {popAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>Pop</h4>\r\n                        {popAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                {rbAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>R&B</h4>\r\n                        {rbAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                 {jazzAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>Jazz</h4>\r\n                        {jazzAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import { Carousel } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport './LandingPage.css';\r\n\r\nfunction LandingPage() {\r\n\r\n    return (\r\n        <div className=\"p-landing\">\r\n            <h1>Welcome To My Music</h1>\r\n          <img src=\"\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LandingPage;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction SearchingPage({activeUser}) {\r\n    if(!activeUser){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n        <div>\r\n            SearchingPage\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchingPage;","export default __webpack_public_path__ + \"static/media/logo.27e693a3.jpg\";","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport '../MyMusicNavbar/MyMusicNavbar.css'\r\nimport logoImg from './logo.jpg';\r\n\r\nfunction MyMusicNavbar({ activeUser , onLogout }) {\r\n        return (\r\n        <Navbar variant=\"dark\" className=\"navbar navbar-bg\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">\r\n            <img src={logoImg} width=\"60\" className=\"logo\"/>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"nav-display\">\r\n                <Nav className=\"mr-auto\">\r\n                    {activeUser ? < Nav.Link href=\"#all-playlists\">Playlists</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link href=\"#albums\">Albums</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link href=\"#artists\">Artists</Nav.Link> : null}\r\n                </Nav>\r\n                <Nav className=\"ml-auto\">\r\n                    {!activeUser ? <Nav.Link href=\"#login\">Login</Nav.Link> : null}\r\n                    {!activeUser ? <Nav.Link href=\"#signup\">Signup</Nav.Link> : null}\r\n                    {activeUser ? <Navbar.Text> Hi {activeUser.name}!</Navbar.Text>: null}\r\n                    {activeUser ? <Nav.Link href=\"#\" onClick= {() => onLogout()}>Logout</Nav.Link> : null}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar >\r\n    );\r\n}\r\n\r\nexport default MyMusicNavbar;","import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './LoginPage.css';\r\n\r\nfunction LoginPage({ users, onLogin, activeUser }) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [showInvalidLogin, setshowInvalidLogin] = useState(false);\r\n\r\n    if (activeUser) {\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n\r\n    function login(e) {\r\n        e.preventDefault();\r\n        let activeUser = null;\r\n        for (const user of users) {\r\n            if (user.login(email, password)) {\r\n                activeUser = user;\r\n                break;\r\n            }\r\n        }\r\n        if (activeUser) {\r\n            onLogin(activeUser);\r\n        } else {\r\n            setshowInvalidLogin(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-login\">\r\n            <h1>Login to My Music</h1>\r\n            <Form onSubmit={login}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n                <Button type=\"submit\">Login</Button>\r\n            </Form>\r\n            { showInvalidLogin ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\r\n            <p>Don't have an account yet ?</p>\r\n            <Button type=\"button\"><Link to=\"/signup\" className=\"signup-link\">Signup for free</Link></Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport './SignupPage.css'\r\n\r\nfunction SignupPage({addUser, activeUser}) {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    if (activeUser) {\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n\r\n    function clearForm(){\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n    }\r\n    \r\n    function createUser(){\r\n        addUser(name, email, password);\r\n        clearForm();\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-signup\">\r\n              <h1>Signup to My Music</h1>\r\n            <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Full name</Form.Label>\r\n                    <Form.Control type=\"name\" placeholder=\"Full name\" value={name} onChange={e => setName(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\" onClick={createUser}>Signup</Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignupPage;","class UserModel {\r\n    constructor(plainUser) {\r\n        this.id= plainUser.id;\r\n        this.name= plainUser.name;\r\n        this.email= plainUser.email;\r\n        this.password= plainUser.password;\r\n        this.albums= plainUser.albums;\r\n        this.artists= plainUser.artists;\r\n    }\r\n\r\n    login(email , password) {\r\n        return email.toLowerCase() === this.email.toLowerCase() && password===this.password;\r\n    }\r\n}\r\n\r\nexport default UserModel;\r\n\r\n","class AlbumModel {\r\n    constructor(plainAlbum) {\r\n        this.id= plainAlbum.id;\r\n        this.title= plainAlbum.title;\r\n        this.artistId= plainAlbum.artistId;\r\n        this.year= plainAlbum.year;\r\n        this.genre= plainAlbum.genre;\r\n        this.image= plainAlbum.image;\r\n    }\r\n\r\n}\r\n\r\nexport default AlbumModel;\r\n\r\n","class ArtistModel {\r\n    constructor(plainArtist) {\r\n        this.id= plainArtist.id;\r\n        this.name= plainArtist.name;\r\n        this.image= plainArtist.image;\r\n    }\r\n\r\n}\r\n\r\nexport default ArtistModel;\r\n","class TrackModel {\r\n    constructor(plainTrack) {\r\n        this.id= plainTrack.id;\r\n        this.title= plainTrack.title;\r\n        this.length= plainTrack.length;\r\n        this.albumId= plainTrack.albumId;\r\n        this.play = plainTrack.play;\r\n        this.file = plainTrack.file;\r\n        this.active = plainTrack.active;\r\n        \r\n        this.url = \"process.env.PUBLIC_URL+plainTrack.file\";\r\n        this.tags = [''];\r\n    }\r\n\r\n}\r\n\r\nexport default TrackModel;\r\n","class PlaylistModel {\r\n    constructor(plainPlaylist) {\r\n        this.id= plainPlaylist.id;\r\n        this.title= plainPlaylist.title;\r\n        this.userId= plainPlaylist.userId;\r\n        this.tracksId= plainPlaylist.tracksId;\r\n        this.active=plainPlaylist.active;\r\n    }\r\n\r\n}\r\n\r\nexport default PlaylistModel;\r\n","import { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport AlbumPage from './pages/AlbumPage/AlbumPage';\nimport AllPlaylistsPage from './pages/AllPlaylistsPage/AllPlaylistsPage';\nimport ArtistPage from './pages/ArtistPage/ArtistPage';\nimport FavoriteAlbumsPage from './pages/FavoriteAlbumsPage/FavoriteAlbumsPage';\nimport FavoriteArtistsPage from './pages/FavoriteArtistsPage/FavoriteArtistsPage';\nimport HomePage from './pages/HomePage/HomePage';\nimport LandingPage from './pages/LandingPage/LandingPage';\nimport PlaylistPage from './pages/PlaylistPage/PlaylistPage';\nimport SearchingPage from './pages/SearchingPage/SearchingPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MyMusicNavbar from './components/MyMusicNavbar/MyMusicNavbar';\nimport { useState } from 'react';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport './App.css';\nimport usersJSON from './data/users.json';\nimport albumsJSON from './data/albums.json';\nimport artistsJSON from './data/artists.json';\nimport tracksJSON from './data/tracks.json';\nimport playlistsJSON from './data/playlists.json';\nimport UserModel from './model/UserModel';\nimport AlbumModel from './model/AlbumModel';\nimport ArtistModel from './model/ArtistModel';\nimport TrackModel from './model/TrackModel';\nimport PlaylistModel from './model/PlaylistModel';\nimport { useEffect } from 'react';\n\n\nfunction App() {\n  const [users, setUsers] = useState(usersJSON.map(plainUser => new UserModel(plainUser)));\n  const [activeUser, setActiveUser] = useState(users[0]);\n\n  const[albums, setAlbums] = useState(albumsJSON.map(plainAlbum => new AlbumModel(plainAlbum)));\n  const[artists, setArtists] = useState(artistsJSON.map(plainArtist => new ArtistModel(plainArtist)));\n  const[tracks, setTracks] = useState(tracksJSON.map(plainTrack => new TrackModel(plainTrack)));\n  const[playlists, setPlaylists] = useState(playlistsJSON.map(plainPlaylist => new PlaylistModel (plainPlaylist)));\n\n\n  function addUser(name, email, password){\n    const newUser = new UserModel ({id: users[users.length-1].id+1, name, email, password});\n    setUsers(users.concat(newUser));\n    setActiveUser(newUser);\n  }\n\n  function handlePlayTrack(id, value) {\n    const tempTracks = [...tracks];\n    tempTracks.map(track => { if (track.id === id) { track.play = value } else {track.play = false}});\n    setTracks(tempTracks);\n  }\n\n  function addPlaylist(playlistName) {\n    const newPlaylist = new PlaylistModel({\n      id: playlists[playlists.length-1].id +1,\n      title: playlistName,\n      userId: activeUser.id\n    });\n\n    setPlaylists(playlists.concat(newPlaylist));\n  }\n\nfunction editPlaylist(id , name) {\n  const tempPlaylists = [...playlists];\n  tempPlaylists.map(playlist => { if (playlist.id === id) { playlist.title = name } });\n  setPlaylists(tempPlaylists);\n}\n\nfunction removeTrack(playlistId , trackId) {\n  const tempPlaylists = [...playlists];\n  tempPlaylists.map(playlist => { if (playlist.id === playlistId) { playlist.tracksId.splice(trackId-1, 1) } });\n  setPlaylists(tempPlaylists);\n}\n\nfunction removePlaylist(playlistId) {\n  const tempPlaylists = [...playlists];\n  tempPlaylists.map(playlist => { if (playlist.id === playlistId) { playlist.active = false } });\n  setPlaylists(tempPlaylists);\n}\n\nfunction addTrack(playlistId , track) {\n  debugger;\n  const tempPlaylists = [...playlists];\n  tempPlaylists.map(playlist => { if (playlist.id === playlistId) { playlist.tracksId.push(track.id) }});\n  setPlaylists(tempPlaylists);\n}\n\n  return (\n    <>\n    <MyMusicNavbar activeUser={activeUser} onLogout={() => setActiveUser(null)}/>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\"><LandingPage/></Route>\n          <Route exact path=\"/home\"><HomePage activeUser={activeUser} albums={albums} artists={artists}/></Route>\n          <Route exact path=\"/login\"><LoginPage users={users} onLogin={user => setActiveUser(user)} activeUser={activeUser}/></Route>\n          <Route exact path=\"/signup\"><SignupPage addUser={addUser} activeUser={activeUser}/></Route>\n          <Route exact path=\"/album/:index\"><AlbumPage \n          activeUser={activeUser}\n          albums={albums}\n          tracks={tracks}\n          artists={artists}\n          playlists={playlists}\n          handlePlayTrack={handlePlayTrack}\n          addTrack={addTrack}\n          /></Route>\n          <Route exact path=\"/search\"><SearchingPage activeUser={activeUser}/></Route>\n          <Route exact path=\"/artist/:index\"><ArtistPage activeUser={activeUser} albums={albums} artists={artists}/></Route>\n          <Route exact path=\"/all-playlists\"><AllPlaylistsPage activeUser={activeUser} playlists={playlists} onAddPlaylist={addPlaylist}/></Route>\n          <Route exact path=\"/playlist/:index\"><PlaylistPage \n          activeUser={activeUser}\n          playlists={playlists}\n          tracks={tracks}\n          handlePlayTrack={handlePlayTrack}\n          onEditPlaylist={editPlaylist}\n          onRemoveTrack={removeTrack}\n          onRemovePlaylist ={removePlaylist}\n          /></Route>\n          <Route exact path=\"/artists\"><FavoriteArtistsPage activeUser={activeUser}/></Route>\n          <Route exact path=\"/albums\"><FavoriteAlbumsPage activeUser={activeUser}/></Route>\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Container } from 'react-bootstrap';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}