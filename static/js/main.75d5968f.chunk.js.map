{"version":3,"sources":["pages/AlbumPage/On The Run.mp3","pages/AlbumPage/AlbumPage.js","components/NewPlaylistModal/NewPlaylistModal.js","components/NamePlaylistModal/NamePlaylistModal.js","pages/PlaylistPage/PlaylistPage.js","pages/AllPlaylistsPage/AllPlaylistsPage.js","components/AlbumCard/AlbumCard.js","pages/ArtistPage/ArtistPage.js","pages/FavoriteAlbumsPage/FavoriteAlbumsPage.js","pages/FavoriteArtistsPage/FavoriteArtistsPage.js","pages/HomePage/HomePage.js","pages/LandingPage/LandingPage.js","pages/SearchingPage/SearchingPage.js","components/MyMusicNavbar/logo.jpg","components/MyMusicNavbar/MyMusicNavbar.js","pages/LoginPage/LoginPage.js","pages/SignupPage/SignupPage.js","model/UserModel.js","model/AlbumModel.js","model/ArtistModel.js","model/TrackModel.js","model/PlaylistModel.js","App.js","reportWebVitals.js","index.js"],"names":["AlbumPage","activeUser","albums","tracks","artists","index","handlePlayTrack","useParams","useState","trackPlay","setTrackPlay","currentAlbum","currentArtist","find","artist","id","artistId","albumTracks","filter","track","albumId","i","className","title","name","year","genre","src","image","length","Table","striped","bordered","hover","size","variant","map","onClick","value","Audio","audioFile","play","trackList","includeTags","includeSearch","showPlaylist","autoPlayNextTrack","to","NewPlaylistModal","show","onClose","onCreate","playlistName","setPlaylistName","Modal","onHide","Header","closeButton","Title","Body","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","type","onChange","e","target","Footer","Button","NamePlaylistModal","playlist","onEdit","PlaylistPage","playlists","onEditPlaylist","currentPlaylist","showNamePlaylistModal","setShowNamePlaylistModal","currentTrack","currentTracks","tracksId","includes","audioObj","file","pause","playTrack","AllPlaylistsPage","onAddPlaylist","showNewPlaylistModal","setShowNewPlaylistModal","userPlaylists","userId","AlbumCard","album","albumIndex","artistIndex","Card","Img","Text","ArtistPage","artistAlbums","md","FavoriteAlbumsPage","FavoriteArtistsPage","HomePage","filterText","setFilterText","artistsId","toLowerCase","filteredAlbums","rockAlbumsCards","popAlbumsCards","rbAlbumsCards","jazzAlbumsCards","placeholder","LandingPage","SearchingPage","MyMusicNavbar","onLogout","Navbar","expand","Brand","href","logoImg","width","Toggle","aria-controls","Collapse","Nav","Link","LoginPage","users","onLogin","email","setEmail","password","setPassword","showInvalidLogin","setshowInvalidLogin","onSubmit","preventDefault","user","login","Alert","SignupPage","addUser","setName","UserModel","plainUser","this","AlbumModel","plainAlbum","ArtistModel","plainArtist","TrackModel","plainTrack","url","tags","PlaylistModel","plainPlaylist","App","usersJSON","setUsers","setActiveUser","albumsJSON","artistsJSON","tracksJSON","setTracks","playlistsJSON","setPlaylists","tempTracks","exact","path","newUser","concat","newPlaylist","tempPlaylists","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75d5968f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/On The Run.97104736.mp3\";","import React, { useEffect } from 'react';\r\nimport { ListGroup, Row, Spinner, Table, Button } from 'react-bootstrap';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport './AlbumPage.css';\r\nimport { FaPlay, FaPause, FaPlus, FaPauseCircle, FaPlayCircle, FaPlusCircle } from \"react-icons/fa\";\r\nimport { useState } from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport Player from '@madzadev/audio-player'\r\nimport '@madzadev/audio-player/dist/index.css'\r\nimport audioFile from './On The Run.mp3';\r\n\r\nfunction AlbumPage({ activeUser, albums, tracks, artists, handlePlayTrack }) {\r\n    const { index } = useParams();\r\n    const [trackPlay, setTrackPlay] = useState(null);\r\n    const currentAlbum = albums[index];\r\n    const currentArtist = artists.find(artist => artist.id === currentAlbum.artistId);\r\n    \r\n   \r\n    // useEffect(() => {\r\n    //     debugger;\r\n    //     if (trackPlay) {\r\n    //         const audioObj = new Audio(trackPlay.file);\r\n    //         audioObj.play();\r\n\r\n    //         return () => {\r\n    //             debugger;\r\n    //             audioObj.pause();\r\n    //         }\r\n    //     }\r\n    // }, [trackPlay])\r\n\r\n\r\n\r\n    const albumTracks = tracks.filter(track => track.albumId === currentAlbum.id);\r\n\r\n    //track num\r\n    let i = 1;\r\n\r\n    // let currentTrack ; //= tracks[0]\r\n\r\n    function playTrack(id, value) {\r\n        if (value) {\r\n            setTrackPlay(tracks.find(track => track.id === id));\r\n        } else {\r\n            setTrackPlay(null);\r\n        }\r\n\r\n        let audioObj = new Audio(audioFile);\r\n        audioObj.play();\r\n\r\n\r\n\r\n\r\n        // debugger;\r\n        // handlePlayTrack(id, value);\r\n        // //play / pause track\r\n        // currentTrack = tracks.find(track => track.id === id);\r\n        // let audioObj = new Audio(currentTrack.file);\r\n        // if (currentTrack.play) {\r\n        //     audioObj.play();\r\n        // } else {\r\n        //     audioObj.pause(); //not working\r\n        // }\r\n    }\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"p-album\">\r\n            <div className=\"album-row\">\r\n                <div className=\"album-details\">\r\n                    <h1>{currentAlbum.title}</h1>\r\n                    <h3>{currentArtist.name}</h3>\r\n                    <h5>{currentAlbum.year}</h5>\r\n                    <h5>{currentAlbum.genre}</h5>\r\n                </div>\r\n                <div className=\"album-img\">\r\n                    <img src={currentAlbum.image} />\r\n                </div>\r\n            </div>\r\n\r\n            {albumTracks.length > 0 ?\r\n                <div className=\"album-row\">\r\n                    <h4>Track Listing</h4>\r\n                    <div className=\"album-tracks\">\r\n\r\n                        <Table striped bordered hover size=\"sm\" variant=\"dark\">\r\n                            <tbody>\r\n                                {albumTracks.map(track =>\r\n                                    <tr>\r\n                                        <td>{i++}</td>\r\n                                        <td>{track.title}</td>\r\n                                        <td>{track.length}</td>\r\n                                        <td className=\"td-btn\">\r\n                                            <a className=\"tracks-btn\" onClick={() => playTrack(track.id, !(trackPlay && trackPlay.id === track.id))}>\r\n                                                {trackPlay && trackPlay.id === track.id ?  <FaPauseCircle /> : <FaPlayCircle />}\r\n                                            </a></td>\r\n                                        <td className=\"td-btn\"><a className=\"tracks-btn\" ><FaPlusCircle /></a></td>\r\n\r\n                                    </tr>)}\r\n                            </tbody>\r\n                        </Table>\r\n\r\n                    </div>\r\n                </div>\r\n                : null}\r\n\r\n                {/* <ReactAudioPlayer src={currentTrack} autoPlay controls/> */}\r\n\r\n                 {albumTracks.length > 0 ? \r\n                    <Player trackList={albumTracks}\r\n                    includeTags={true}\r\n                    includeSearch={false}\r\n                    showPlaylist={true}\r\n                    autoPlayNextTrack={true}/>\r\n                    : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlbumPage;","import React, { useState } from 'react';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport './NewPlaylistModal.css';\r\n\r\nfunction NewPlaylistModal({ show, onClose, onCreate }) {\r\n    const [playlistName , setPlaylistName] = useState(\"\");\r\n\r\n    function createPlaylist () {\r\n        setPlaylistName(\"\");\r\n        onCreate(playlistName);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"m-new-playlist\" show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add a new playlist</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"formPlaylistTitle\">\r\n                        <Form.Label column sm={3}>\r\n                            Playlist name\r\n                        </Form.Label>\r\n                        <Col sm={9}>\r\n                            <Form.Control type=\"text\" value={playlistName} onChange={e => setPlaylistName(e.target.value)}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={createPlaylist}>\r\n                    Add\r\n          </Button>\r\n\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default NewPlaylistModal;","import React, { useState } from 'react';\r\nimport { Row, Col, Form, Modal, Button } from 'react-bootstrap';\r\nimport './NamePlaylistModal.css';\r\n\r\nfunction NamePlaylistModal({ playlist , show, onClose ,onEdit }) {\r\n    const [playlistName , setPlaylistName] = useState(\"\");\r\n\r\n     function editPlaylist () {\r\n        setPlaylistName(\"\");\r\n        onEdit(playlist.id , playlistName);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"m-name-playlist\" show={show} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Rename playlist</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n                <Form.Group as={Row} controlId=\"formPlaylistTitle\">\r\n                    <Form.Label column sm={3}>\r\n                        Playlist name\r\n                    </Form.Label>\r\n                    <Col sm={9}>\r\n                        <Form.Control type=\"text\" value={playlistName} onChange={e => setPlaylistName(e.target.value)}/>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={editPlaylist}>\r\n                Save\r\n      </Button>\r\n\r\n        </Modal.Footer>\r\n    </Modal>\r\n    );\r\n}\r\n\r\nexport default NamePlaylistModal;","import React, { useState } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { FaMinusCircle, FaPauseCircle, FaPlayCircle, FaPlusCircle, FaRegEdit } from 'react-icons/fa';\r\nimport './PlaylistPage.css';\r\nimport Player from '@madzadev/audio-player'\r\nimport '@madzadev/audio-player/dist/index.css'\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport NamePlaylistModal from '../../components/NamePlaylistModal/NamePlaylistModal';\r\n\r\nfunction PlaylistPage({ activeUser, playlists, tracks, handlePlayTrack, onEditPlaylist}) {\r\n\r\n    const { index } = useParams();\r\n    const currentPlaylist = playlists[index - 1];\r\n    const[showNamePlaylistModal, setShowNamePlaylistModal] = useState(false);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const currentTracks = tracks.filter(track => currentPlaylist.tracksId.includes(track.id));\r\n\r\n    let i = 1;\r\n    let currentTrack;\r\n\r\n    function playTrack(id, value) {\r\n        handlePlayTrack(id, value);\r\n        //play / pause track\r\n        currentTrack = tracks.find(track => track.id === id);\r\n        let audioObj = new Audio(currentTrack.file);\r\n        if (currentTrack.play) {\r\n            audioObj.play();\r\n        } else {\r\n            audioObj.pause(); //not working\r\n        }\r\n    }\r\n\r\n    function addToPlaylist() {\r\n        // debugger;\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-playlist\">\r\n            {/* {currentPlaylist ? */}\r\n            <div className=\"icons-btn\">\r\n                <FaPlayCircle className=\"icon-btn\"/>\r\n                <FaPlusCircle className=\"icon-btn\" onClick={addToPlaylist}/>\r\n                <FaMinusCircle className=\"icon-btn\"/>\r\n                <FaRegEdit className=\"icon-btn\" onClick={() => setShowNamePlaylistModal(true)}/>\r\n            </div>\r\n            <h1>{currentPlaylist.title}</h1>\r\n            {/* : null} */}\r\n            {currentTracks.length > 0 ?\r\n                <div className=\"playlist-tbl\">\r\n                    <Table striped bordered hover size=\"sm\" variant=\"dark\">\r\n                        <tbody>\r\n                            {currentTracks.map(track =>\r\n                                <tr>\r\n                                    <td>{i++}</td>\r\n                                    <td>{track.title}</td>\r\n                                    <td>{track.length}</td>\r\n                                    <td className=\"td-btn\"><a className=\"tracks-btn\" onClick={() => playTrack(track.id, !track.play)}>{!track.play ? <FaPlayCircle /> : <FaPauseCircle />}</a></td>\r\n                                    <td className=\"td-btn\"><a className=\"tracks-btn\" ><FaMinusCircle /></a></td>\r\n\r\n                                </tr>)}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                : null}\r\n\r\n            {currentTracks.length > 0 ?\r\n                <Player\r\n                    trackList={currentTracks}\r\n                    includeTags={true}\r\n                    includeSearch={false}\r\n                    showPlaylist={true}\r\n                    autoPlayNextTrack={true} />\r\n                : null}\r\n                 <NamePlaylistModal show={showNamePlaylistModal} onClose={() => setShowNamePlaylistModal(false)} onEdit={onEditPlaylist} playlist={currentPlaylist}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlaylistPage;","import React, { useState } from 'react';\r\nimport { ListGroup, Table } from 'react-bootstrap';\r\nimport { FaPlusCircle, FaRegHeart } from 'react-icons/fa';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport NewPlaylistModal from '../../components/NewPlaylistModal/NewPlaylistModal';\r\nimport PlaylistPage from '../PlaylistPage/PlaylistPage';\r\nimport './AllPlaylistsPage.css';\r\n\r\nfunction AllPlaylistsPage({ activeUser, playlists, onAddPlaylist }) {\r\n    const [showNewPlaylistModal , setShowNewPlaylistModal] = useState(false);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const userPlaylists = playlists.filter(playlist => playlist.userId === activeUser.id);\r\n\r\n    //playlist num\r\n    let i = 1;\r\n\r\n    return (\r\n        <div className=\"p-all-playlists\">\r\n            {/* <div className=\"row\"> */}\r\n                <FaPlusCircle className=\"plus-icon\" onClick={() => setShowNewPlaylistModal(true)}/>\r\n                <h1>My Playlists</h1>\r\n            {/* </div> */}\r\n            {userPlaylists.length > 0 ?\r\n                <div className=\"playlists-tbl\">\r\n                    <Table striped bordered hover size=\"sm\" variant=\"dark\">\r\n                        <tbody>\r\n                            {userPlaylists.map(playlist =>\r\n                                <tr>\r\n                                    <td>{i++}</td>\r\n                                    <td><Link to={\"/playlist/\" + playlist.id} className=\"playlist-link\">{playlist.title}</Link></td>\r\n                                </tr>)}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                : null}\r\n                <NewPlaylistModal show={showNewPlaylistModal} onClose={() => setShowNewPlaylistModal(false)} onCreate={onAddPlaylist}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllPlaylistsPage;","import React from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './AlbumCard.css';\r\nimport AlbumPage from '../../pages/AlbumPage/AlbumPage';\r\nimport ArtistPage from '../../pages/ArtistPage/ArtistPage';\r\n\r\n\r\nfunction AlbumCard({ album , artist}) {\r\n    \r\n    const albumIndex = album.id-1;\r\n    const artistIndex = artist.id-1;\r\n\r\n    //     if (index !== undefined) {\r\n    //     return <Redirect to={'/album/' + index}/>\r\n    // }\r\n\r\n    return (\r\n        <Card className=\"album-card\">\r\n            <Card.Img className=\"album-img\" variant=\"top\" src={album.image} />\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <Link to={\"/album/\" + albumIndex} className=\"album-link\">{album.title}</Link>\r\n                </Card.Title>\r\n                <Card.Text> \r\n                    <Link to={\"/artist/\" + artistIndex} className=\"artist-link\"> {artist.name}</Link>  \r\n                    </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default AlbumCard;","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport AlbumCard from '../../components/AlbumCard/AlbumCard';\r\nimport './ArtistPage.css';\r\n\r\nfunction ArtistPage({ activeUser , artists, albums}) {\r\n    const { index } = useParams();\r\n    const currentArtist = artists[index];\r\n    const artistAlbums = albums.filter( album => album.artistId === currentArtist.id);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"p-artist\">\r\n                <div className=\"artist\">\r\n                    <h1>{currentArtist.name}</h1>\r\n                    <img className=\"artist-img\" src={currentArtist.image} />\r\n                </div>\r\n                <div className=\"artist-albums\">\r\n                {artistAlbums.length > 0 ?\r\n                    <Row>\r\n                        {artistAlbums.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={currentArtist}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArtistPage;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction FavoriteAlbumsPage({activeUser}) {\r\n    if(!activeUser){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n        <div>\r\n            FavoriteAlbumsPage\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FavoriteAlbumsPage;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction FavoriteArtistsPage({activeUser}) {\r\n    if(!activeUser){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n        <div>\r\n            FavoriteArtistsPage\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FavoriteArtistsPage;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Col, Form, Row, Spinner } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport './HomePage.css';\r\nimport AlbumCard from '../../components/AlbumCard/AlbumCard';\r\n\r\nfunction HomePage({ activeUser, albums, artists }) {\r\n    const [filterText, setFilterText] = useState(\"\");\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n   // write here code that converts the artists array into artists object\r\n    const artistsMap =[];  //.... artists;\r\n    \r\n    // for (let i=0; i<artists.length; i++){\r\n    //     // const index = i+1;\r\n    //     const artist = {i: artists[i]};\r\n    //     artistsMap.push(artist);\r\n    // }\r\n    \r\n    // debugger;\r\n\r\n    const filterArtists = artists.filter(artist => artist.name.toLowerCase().includes(filterText.toLowerCase()));\r\n    const artistsId = filterArtists.map(artist => artist.id);\r\n\r\n    const filteredAlbums = albums.filter(album => album.title.toLowerCase().includes(filterText.toLowerCase()) || artistsId.includes(album.artistId) );  \r\n\r\n\r\n    //albums by genre\r\n    const rockAlbumsCards = filteredAlbums.filter(album => album.genre === \"Rock\");\r\n    const popAlbumsCards = filteredAlbums.filter(album => album.genre === \"Pop\");\r\n    const rbAlbumsCards = filteredAlbums.filter(album => album.genre === \"R&B\");\r\n    const jazzAlbumsCards = filteredAlbums.filter(album => album.genre === \"Jazz\");\r\n\r\n    // const albumsCards = filteredAlbums.map(album => <Col sm={6} md={2} > <AlbumCard album={album} /></Col>);\r\n\r\n    return (\r\n        <div className=\"p-home\">\r\n            <div className=\"home-search\">\r\n                <h1>Find your music</h1>\r\n                <Form>\r\n                    <Form.Control type=\"text\" className=\"filter\" placeholder=\"Search album \\ artist\" value={filterText} onChange={e => setFilterText(e.target.value)} />\r\n                </Form>\r\n            </div>\r\n            <div className=\"albums-cards\">\r\n                {rockAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>Rock</h4>\r\n                        {rockAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                        {/* artist={artistsMap[album.artistId]} */}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                {popAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>Pop</h4>\r\n                        {popAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                {rbAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>R&B</h4>\r\n                        {rbAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                 {jazzAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>Jazz</h4>\r\n                        {jazzAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import { Carousel } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport './LandingPage.css';\r\n\r\nfunction LandingPage() {\r\n\r\n    return (\r\n        <div className=\"p-landing\">\r\n            <h1>Welcome To My Music</h1>\r\n          <img src=\"\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LandingPage;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction SearchingPage({activeUser}) {\r\n    if(!activeUser){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n        <div>\r\n            SearchingPage\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchingPage;","export default __webpack_public_path__ + \"static/media/logo.27e693a3.jpg\";","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport '../MyMusicNavbar/MyMusicNavbar.css'\r\nimport logoImg from './logo.jpg';\r\n\r\nfunction MyMusicNavbar({ activeUser , onLogout }) {\r\n        return (\r\n        <Navbar variant=\"dark\" className=\"navbar navbar-bg\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">\r\n            <img src={logoImg} width=\"60\" className=\"logo\"/>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"nav-display\">\r\n                <Nav className=\"mr-auto\">\r\n                    {activeUser ? < Nav.Link href=\"#all-playlists\">Playlists</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link href=\"#albums\">Albums</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link href=\"#artists\">Artists</Nav.Link> : null}\r\n                </Nav>\r\n                <Nav className=\"ml-auto\">\r\n                    {!activeUser ? <Nav.Link href=\"#login\">Login</Nav.Link> : null}\r\n                    {!activeUser ? <Nav.Link href=\"#signup\">Signup</Nav.Link> : null}\r\n                    {activeUser ? <Navbar.Text> Hi {activeUser.name}!</Navbar.Text>: null}\r\n                    {activeUser ? <Nav.Link href=\"#\" onClick= {() => onLogout()}>Logout</Nav.Link> : null}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar >\r\n    );\r\n}\r\n\r\nexport default MyMusicNavbar;","import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './LoginPage.css';\r\n\r\nfunction LoginPage({ users, onLogin, activeUser }) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [showInvalidLogin, setshowInvalidLogin] = useState(false);\r\n\r\n    if (activeUser) {\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n\r\n    function login(e) {\r\n        e.preventDefault();\r\n        let activeUser = null;\r\n        for (const user of users) {\r\n            if (user.login(email, password)) {\r\n                activeUser = user;\r\n                break;\r\n            }\r\n        }\r\n        if (activeUser) {\r\n            onLogin(activeUser);\r\n        } else {\r\n            setshowInvalidLogin(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-login\">\r\n            <h1>Login to My Music</h1>\r\n            <Form onSubmit={login}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n                <Button type=\"submit\">Login</Button>\r\n            </Form>\r\n            { showInvalidLogin ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\r\n            <p>Don't have an account yet ?</p>\r\n            <Button type=\"button\"><Link to=\"/signup\" className=\"signup-link\">Signup for free</Link></Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport './SignupPage.css'\r\n\r\nfunction SignupPage({addUser, activeUser}) {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    if (activeUser) {\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n\r\n    function clearForm(){\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n    }\r\n    \r\n    function createUser(){\r\n        addUser(name, email, password);\r\n        clearForm();\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-signup\">\r\n              <h1>Signup to My Music</h1>\r\n            <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Full name</Form.Label>\r\n                    <Form.Control type=\"name\" placeholder=\"Full name\" value={name} onChange={e => setName(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\" onClick={createUser}>Signup</Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignupPage;","class UserModel {\r\n    constructor(plainUser) {\r\n        this.id= plainUser.id;\r\n        this.name= plainUser.name;\r\n        this.email= plainUser.email;\r\n        this.password= plainUser.password;\r\n        this.albums= plainUser.albums;\r\n        this.artists= plainUser.artists;\r\n    }\r\n\r\n    login(email , password) {\r\n        return email.toLowerCase() === this.email.toLowerCase() && password===this.password;\r\n    }\r\n}\r\n\r\nexport default UserModel;\r\n\r\n","class AlbumModel {\r\n    constructor(plainAlbum) {\r\n        this.id= plainAlbum.id;\r\n        this.title= plainAlbum.title;\r\n        this.artistId= plainAlbum.artistId;\r\n        this.year= plainAlbum.year;\r\n        this.genre= plainAlbum.genre;\r\n        this.image= plainAlbum.image;\r\n    }\r\n\r\n}\r\n\r\nexport default AlbumModel;\r\n\r\n","class ArtistModel {\r\n    constructor(plainArtist) {\r\n        this.id= plainArtist.id;\r\n        this.name= plainArtist.name;\r\n        this.image= plainArtist.image;\r\n    }\r\n\r\n}\r\n\r\nexport default ArtistModel;\r\n","class TrackModel {\r\n    constructor(plainTrack) {\r\n        this.id= plainTrack.id;\r\n        this.title= plainTrack.title;\r\n        this.length= plainTrack.length;\r\n        this.albumId= plainTrack.albumId;\r\n        this.play = plainTrack.play;\r\n        this.file = plainTrack.file;\r\n        \r\n        this.url = plainTrack.file;\r\n        this.tags = [''];\r\n    }\r\n\r\n}\r\n\r\nexport default TrackModel;\r\n","class PlaylistModel {\r\n    constructor(plainPlaylist) {\r\n        this.id= plainPlaylist.id;\r\n        this.title= plainPlaylist.title;\r\n        this.userId= plainPlaylist.userId;\r\n        this.tracksId= plainPlaylist.tracksId;\r\n    }\r\n\r\n}\r\n\r\nexport default PlaylistModel;\r\n","import { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport AlbumPage from './pages/AlbumPage/AlbumPage';\nimport AllPlaylistsPage from './pages/AllPlaylistsPage/AllPlaylistsPage';\nimport ArtistPage from './pages/ArtistPage/ArtistPage';\nimport FavoriteAlbumsPage from './pages/FavoriteAlbumsPage/FavoriteAlbumsPage';\nimport FavoriteArtistsPage from './pages/FavoriteArtistsPage/FavoriteArtistsPage';\nimport HomePage from './pages/HomePage/HomePage';\nimport LandingPage from './pages/LandingPage/LandingPage';\nimport PlaylistPage from './pages/PlaylistPage/PlaylistPage';\nimport SearchingPage from './pages/SearchingPage/SearchingPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MyMusicNavbar from './components/MyMusicNavbar/MyMusicNavbar';\nimport { useState } from 'react';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport './App.css';\nimport usersJSON from './data/users.json';\nimport albumsJSON from './data/albums.json';\nimport artistsJSON from './data/artists.json';\nimport tracksJSON from './data/tracks.json';\nimport playlistsJSON from './data/playlists.json';\nimport UserModel from './model/UserModel';\nimport AlbumModel from './model/AlbumModel';\nimport ArtistModel from './model/ArtistModel';\nimport TrackModel from './model/TrackModel';\nimport PlaylistModel from './model/PlaylistModel';\nimport { useEffect } from 'react';\n\n\nfunction App() {\n  const [users, setUsers] = useState(usersJSON.map(plainUser => new UserModel(plainUser)));\n  const [activeUser, setActiveUser] = useState(users[0]);\n\n  const[albums, setAlbums] = useState(albumsJSON.map(plainAlbum => new AlbumModel(plainAlbum)));\n  const[artists, setArtists] = useState(artistsJSON.map(plainArtist => new ArtistModel(plainArtist)));\n  const[tracks, setTracks] = useState(tracksJSON.map(plainTrack => new TrackModel(plainTrack)));\n  const[playlists, setPlaylists] = useState(playlistsJSON.map(plainPlaylist => new PlaylistModel (plainPlaylist)));\n\n\n  function addUser(name, email, password){\n    const newUser = new UserModel ({id: users[users.length-1].id+1, name, email, password});\n    setUsers(users.concat(newUser));\n    setActiveUser(newUser);\n  }\n\n  function handlePlayTrack(id, value) {\n    const tempTracks = [...tracks];\n    tempTracks.map(track => { if (track.id === id) { track.play = value } else {track.play = false}});\n    setTracks(tempTracks);\n  }\n\n  function addPlaylist(playlistName) {\n    const newPlaylist = new PlaylistModel({\n      id: playlists[playlists.length-1].id +1,\n      title: playlistName,\n      userId: activeUser.id\n    });\n\n    setPlaylists(playlists.concat(newPlaylist));\n  }\n\nfunction editPlaylist(id , name) {\n  const tempPlaylists = [...playlists];\n  tempPlaylists.map(playlist => { if (playlist.id === id) { playlist.title = name } });\n  setPlaylists(tempPlaylists);\n}\n\n  return (\n    <>\n    <MyMusicNavbar activeUser={activeUser} onLogout={() => setActiveUser(null)}/>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\"><LandingPage/></Route>\n          <Route exact path=\"/home\"><HomePage activeUser={activeUser} albums={albums} artists={artists}/></Route>\n          <Route exact path=\"/login\"><LoginPage users={users} onLogin={user => setActiveUser(user)} activeUser={activeUser}/></Route>\n          <Route exact path=\"/signup\"><SignupPage addUser={addUser} activeUser={activeUser}/></Route>\n          <Route exact path=\"/album/:index\"><AlbumPage activeUser={activeUser} albums={albums} tracks={tracks} artists={artists} handlePlayTrack={handlePlayTrack}/></Route>\n          <Route exact path=\"/search\"><SearchingPage activeUser={activeUser}/></Route>\n          <Route exact path=\"/artist/:index\"><ArtistPage activeUser={activeUser} albums={albums} artists={artists}/></Route>\n          <Route exact path=\"/all-playlists\"><AllPlaylistsPage activeUser={activeUser} playlists={playlists} onAddPlaylist={addPlaylist}/></Route>\n          <Route exact path=\"/playlist/:index\"><PlaylistPage activeUser={activeUser}  playlists={playlists} tracks={tracks} handlePlayTrack={handlePlayTrack} onEditPlaylist={editPlaylist}/></Route>\n          <Route exact path=\"/artists\"><FavoriteArtistsPage activeUser={activeUser}/></Route>\n          <Route exact path=\"/albums\"><FavoriteAlbumsPage activeUser={activeUser}/></Route>\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Container } from 'react-bootstrap';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}