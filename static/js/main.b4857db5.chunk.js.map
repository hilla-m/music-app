{"version":3,"sources":["pages/AlbumPage/On The Run.mp3","pages/AlbumPage/Speak To MeBreathe.mp3","components/AddTrackToPlaylistModal/AddTrackToPlaylistModal.js","pages/AlbumPage/AlbumPage.js","components/NewPlaylistModal/NewPlaylistModal.js","components/NamePlaylistModal/NamePlaylistModal.js","pages/PlaylistPage/On The Run.mp3","components/RemoveTrackModal/RemoveTrackModal.js","components/RemovePlaylistModal/RemovePlaylistModal.js","pages/PlaylistPage/PlaylistPage.js","pages/AllPlaylistsPage/AllPlaylistsPage.js","components/AlbumCard/AlbumCard.js","pages/ArtistPage/ArtistPage.js","pages/FavoriteAlbumsPage/FavoriteAlbumsPage.js","pages/FavoriteArtistsPage/FavoriteArtistsPage.js","pages/HomePage/HomePage.js","pages/LandingPage/LandingPage.js","pages/SearchingPage/SearchingPage.js","components/MyMusicNavbar/logo.jpg","components/MyMusicNavbar/MyMusicNavbar.js","pages/LoginPage/LoginPage.js","pages/SignupPage/SignupPage.js","model/UserModel.js","model/AlbumModel.js","model/ArtistModel.js","model/TrackModel.js","model/PlaylistModel.js","App.js","reportWebVitals.js","index.js"],"names":["AddTrackToPlaylistModal","playlists","trackAdd","show","onClose","onAddTrack","useState","currPlaylist","setCurrPlaylist","Modal","className","onHide","Header","closeButton","Title","Body","Form","Group","Label","Control","as","custom","value","onChange","e","target","map","playlist","title","id","Footer","Button","variant","onClick","AlbumPage","activeUser","albums","tracks","artists","addTrack","handlePlayTrack","index","useParams","trackPlay","setTrackPlay","showAddTrackModal","setShowAddTrackModal","setTrackAdd","setPlay","currentAlbum","currentArtist","find","artist","artistId","albumTracks","filter","track","albumId","useEffect","file","audioObj","Audio","audio3","play","pause","i","name","year","genre","src","image","length","Table","striped","bordered","hover","size","handleAddTrack","to","NewPlaylistModal","onCreate","playlistName","setPlaylistName","Row","controlId","column","sm","Col","type","NamePlaylistModal","onEdit","RemoveTrackModal","onRemove","RemovePlaylistModal","redirectToAllPlaylists","setRedirectToAllPlaylists","PlaylistPage","onEditPlaylist","onRemoveTrack","onRemovePlaylist","currentPlaylist","showNamePlaylistModal","setShowNamePlaylistModal","showRemoveTrackModal","setShowRemoveTrackModal","trackRemove","setTrackRemove","showRemovePlaylistModal","setShowRemovePlaylistModal","redirectToHome","setRedirectToHome","audioUrl","process","currentTracks","tracksId","includes","handleOnClick","trackList","includeTags","includeSearch","showPlaylist","autoPlayNextTrack","AllPlaylistsPage","onAddPlaylist","showNewPlaylistModal","setShowNewPlaylistModal","userPlaylists","userId","active","AlbumCard","album","albumIndex","artistIndex","Card","Img","Text","ArtistPage","artistAlbums","md","FavoriteAlbumsPage","FavoriteArtistsPage","HomePage","filterText","setFilterText","artistsId","toLowerCase","filteredAlbums","rockAlbumsCards","popAlbumsCards","rbAlbumsCards","jazzAlbumsCards","placeholder","LandingPage","SearchingPage","MyMusicNavbar","onLogout","Navbar","expand","Toggle","aria-controls","Collapse","Nav","Link","href","logoImg","width","LoginPage","users","onLogin","email","setEmail","password","setPassword","showInvalidLogin","setshowInvalidLogin","onSubmit","preventDefault","user","login","Alert","SignupPage","addUser","setName","UserModel","plainUser","this","AlbumModel","plainAlbum","ArtistModel","plainArtist","TrackModel","plainTrack","url","tags","PlaylistModel","plainPlaylist","App","usersJSON","setUsers","setActiveUser","albumsJSON","artistsJSON","tracksJSON","setTracks","playlistsJSON","setPlaylists","tempTracks","exact","path","newUser","concat","playlistId","tempPlaylists","push","newPlaylist","trackId","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4857db5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/On The Run.97104736.mp3\";","export default __webpack_public_path__ + \"static/media/Speak To MeBreathe.a4c93e5e.mp3\";","import React, { useState } from 'react';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\nimport './AddTrackToPlaylistModal.css';\r\n\r\nfunction AddTrackToPlaylistModal({ playlists, trackAdd, show, onClose, onAddTrack }) {\r\n    const [currPlaylist, setCurrPlaylist] = useState(playlists[0]);\r\n\r\n    function AddTrackToPlaylist() {\r\n        debugger;\r\n            onAddTrack(currPlaylist.id, trackAdd);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"m-add-track\" show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add track to your playlist</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Choose playlist</Form.Label>\r\n                        <Form.Control as=\"select\" custom value={currPlaylist} onChange={e => setCurrPlaylist(e.target.value)}>\r\n                            {playlists.map(playlist => <option key={playlist.id} >{playlist.title}</option>)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={AddTrackToPlaylist}>\r\n                    Add\r\n      </Button>\r\n\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AddTrackToPlaylistModal;","import React, { useEffect } from 'react';\r\nimport { ListGroup, Row, Spinner, Table, Button } from 'react-bootstrap';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport './AlbumPage.css';\r\nimport { FaPlay, FaPause, FaPlus, FaPauseCircle, FaPlayCircle, FaPlusCircle } from \"react-icons/fa\";\r\nimport { useState } from 'react';\r\nimport Player from '@madzadev/audio-player';\r\nimport '@madzadev/audio-player/dist/index.css';\r\nimport audio1 from './Speak To MeBreathe.mp3';\r\nimport audio2 from './Speak To MeBreathe.mp3';\r\nimport audio3 from './On The Run.mp3';\r\nimport AddTrackToPlaylistModal from '../../components/AddTrackToPlaylistModal/AddTrackToPlaylistModal';\r\nimport AudioPlayer from 'react-h5-audio-player';\r\nimport 'react-h5-audio-player/lib/styles.css';\r\nimport MusicPlayer from '../../components/MusicPlayer/MusicPlayer';\r\n\r\nfunction AlbumPage({ activeUser, albums, tracks, artists, playlists, handlePlayTrack, addTrack }) {\r\n    const { index } = useParams();\r\n    const [trackPlay, setTrackPlay] = useState(null);\r\n    const [showAddTrackModal, setShowAddTrackModal] = useState(false);\r\n    const [trackAdd, setTrackAdd] = useState(null);\r\n    // const [autoPlay, setAutoPlay] = useState(false);\r\n    const [play, setPlay] = useState(true);\r\n\r\n    const currentAlbum = albums[index];\r\n    const currentArtist = artists.find(artist => artist.id === currentAlbum.artistId);\r\n\r\n    const albumTracks = tracks.filter(track => track.albumId === currentAlbum.id);\r\n\r\n    // const[trackList,setTrackList] = useState(albumTracks);\r\n\r\n    useEffect(() => {\r\n        if (trackPlay) {\r\n            debugger;\r\n            const audioUrl = trackPlay.file; //process.env.PUBLIC_URL + trackPlay.file;\r\n            const audioObj = new Audio(audio3);\r\n            audioObj.play();\r\n            \r\n            setPlay(true);\r\n            // setTrackList(albumTracks.slice(trackPlay.id-1));\r\n\r\n            return () => {\r\n                audioObj.pause();\r\n                setPlay(false);\r\n                // setTrackList(albumTracks);\r\n            }\r\n        }\r\n    }, [trackPlay])\r\n\r\n\r\n    //track num\r\n    let i = 1;\r\n\r\n    // let currentTrack ; //= tracks[0]\r\n\r\n    function playTrack(id, value) {\r\n        if (value) {\r\n            setTrackPlay(tracks.find(track => track.id === id));\r\n        } else {\r\n            setTrackPlay(null);\r\n        }\r\n\r\n        // handlePlayTrack(id, value);\r\n        // //play / pause track\r\n        // currentTrack = tracks.find(track => track.id === id);\r\n        // let audioObj = new Audio(currentTrack.file);\r\n        // if (currentTrack.play) {\r\n        //     audioObj.play();\r\n        // } else {\r\n        //     audioObj.pause(); //not working\r\n        // }\r\n    }\r\n\r\n    function handleAddTrack(track) {\r\n        setShowAddTrackModal(true);\r\n        setTrackAdd(track);\r\n    }\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"p-album\">\r\n            <div className=\"album-row\">\r\n                <div className=\"album-details\">\r\n                    <h1>{currentAlbum.title}</h1>\r\n                    <h3>{currentArtist.name}</h3>\r\n                    <h5>{currentAlbum.year}</h5>\r\n                    <h5>{currentAlbum.genre}</h5>\r\n                </div>\r\n                <div className=\"album-img\">\r\n                    <img src={currentAlbum.image} />\r\n                </div>\r\n            </div>\r\n\r\n            {albumTracks.length > 0 ?\r\n                <div className=\"album-row\">\r\n                    <h4>Track Listing</h4>\r\n                    <div className=\"album-tracks\">\r\n\r\n                        <Table striped bordered hover size=\"sm\" variant=\"dark\">\r\n                            <tbody>\r\n                                {albumTracks.map(track =>\r\n                                    <tr key={track.id}>\r\n                                        <td>{i++}</td>\r\n                                        <td>{track.title}</td>\r\n                                        <td>{track.length}</td>\r\n                                        <td className=\"td-btn\">\r\n                                            <a className=\"tracks-btn\" onClick={() => playTrack(track.id, !(trackPlay && trackPlay.id === track.id))}>\r\n                                                {trackPlay && trackPlay.id === track.id ? <FaPauseCircle /> : <FaPlayCircle />}\r\n                                            </a></td>\r\n                                        <td className=\"td-btn\"><FaPlusCircle className=\"tracks-btn\" onClick={() => handleAddTrack(track)} /></td>\r\n\r\n                                    </tr>)}\r\n                            </tbody>\r\n                        </Table>\r\n\r\n                    </div>\r\n                </div>\r\n                : null}\r\n\r\n            {/* {   trackPlay ? */}\r\n                {/* <AudioPlayer\r\n                    // autoPlay={autoPlay}\r\n                    src={audio3}\r\n                /> */}\r\n                {/* <MusicPlayer track={trackPlay} play={play}/> */}\r\n             {/* : null}  */}\r\n\r\n            {/* {albumTracks.length > 0 ?\r\n            <Player trackList={albumTracks}\r\n                includeTags={true}\r\n                includeSearch={false}\r\n                showPlaylist={false}\r\n                autoPlayNextTrack={true} />\r\n            : null} */}\r\n\r\n            <AddTrackToPlaylistModal show={showAddTrackModal} onClose={() => setShowAddTrackModal(false)} playlists={playlists} trackAdd={trackAdd} onAddTrack={addTrack} />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlbumPage;","import React, { useState } from 'react';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport './NewPlaylistModal.css';\r\n\r\nfunction NewPlaylistModal({ show, onClose, onCreate }) {\r\n    const [playlistName , setPlaylistName] = useState(\"\");\r\n\r\n    function createPlaylist () {\r\n        setPlaylistName(\"\");\r\n        onCreate(playlistName);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"m-new-playlist\" show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add a new playlist</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"formPlaylistTitle\">\r\n                        <Form.Label column sm={3}>\r\n                            Playlist name\r\n                        </Form.Label>\r\n                        <Col sm={9}>\r\n                            <Form.Control type=\"text\" value={playlistName} onChange={e => setPlaylistName(e.target.value)}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={createPlaylist}>\r\n                    Add\r\n          </Button>\r\n\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default NewPlaylistModal;","import React, { useState } from 'react';\r\nimport { Row, Col, Form, Modal, Button } from 'react-bootstrap';\r\nimport './NamePlaylistModal.css';\r\n\r\nfunction NamePlaylistModal({ playlist , show, onClose ,onEdit }) {\r\n    const [playlistName , setPlaylistName] = useState(\"\");\r\n\r\n     function editPlaylist () {\r\n        setPlaylistName(\"\");\r\n        onEdit(playlist.id , playlistName);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"m-name-playlist\" show={show} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Rename playlist</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n                <Form.Group as={Row} controlId=\"formPlaylistTitle\">\r\n                    <Form.Label column sm={3}>\r\n                        Playlist name\r\n                    </Form.Label>\r\n                    <Col sm={9}>\r\n                        <Form.Control type=\"text\" value={playlistName} onChange={e => setPlaylistName(e.target.value)}/>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={editPlaylist}>\r\n                Save\r\n      </Button>\r\n\r\n        </Modal.Footer>\r\n    </Modal>\r\n    );\r\n}\r\n\r\nexport default NamePlaylistModal;","export default __webpack_public_path__ + \"static/media/On The Run.97104736.mp3\";","import React, { useState } from 'react';\r\nimport { Modal, Form, Row, Col, Button } from 'react-bootstrap';\r\nimport './RemoveTrackModal.css';\r\n\r\nfunction RemoveTrackModal({ playlist, track, show, onClose, onRemove }) {\r\n\r\n    function removeTrackFromPlaylist() {\r\n        onRemove(playlist.id , track.id);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"m-remove-track\" show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Remove this track from {playlist? playlist.title : \"\"} ?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                  {track? track.title :\"\"} \r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={removeTrackFromPlaylist}>Remove</Button>\r\n      <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default RemoveTrackModal;","import React, { useState } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport './RemovePlaylistModal.css';\r\n\r\nfunction RemovePlaylistModal({ playlist, show, onClose, onRemove }) {\r\n    const [redirectToAllPlaylists, setRedirectToAllPlaylists] = useState(false);\r\n\r\n    function removePlaylist() {\r\n        onRemove(playlist.id);\r\n        onClose();\r\n        setRedirectToAllPlaylists(true);\r\n    }\r\n\r\nif(redirectToAllPlaylists){\r\n    return <Redirect to=\"/all-playlists\" /> \r\n}\r\n\r\n    return (\r\n        <Modal className=\"m-remove-playlist\" show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Delete this playlist?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {playlist.title}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={removePlaylist}>Remove</Button>\r\n                <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default RemovePlaylistModal;","import React, { useEffect, useState } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { FaMinusCircle, FaPauseCircle, FaPlayCircle, FaPlusCircle, FaRegEdit } from 'react-icons/fa';\r\nimport './PlaylistPage.css';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport NamePlaylistModal from '../../components/NamePlaylistModal/NamePlaylistModal';\r\nimport audio3 from './On The Run.mp3';\r\nimport RemoveTrackModal from '../../components/RemoveTrackModal/RemoveTrackModal';\r\nimport RemovePlaylistModal from '../../components/RemovePlaylistModal/RemovePlaylistModal';\r\nimport AddTrackToPlaylistModal from '../../components/AddTrackToPlaylistModal/AddTrackToPlaylistModal';\r\nimport AudioPlayer from 'react-h5-audio-player';\r\nimport 'react-h5-audio-player/lib/styles.css';\r\nimport Player from '@madzadev/audio-player';\r\nimport '@madzadev/audio-player/dist/index.css';\r\n\r\nfunction PlaylistPage({ activeUser, playlists, tracks, handlePlayTrack, onEditPlaylist, onRemoveTrack, onRemovePlaylist }) {\r\n\r\n    const { index } = useParams();\r\n    const currentPlaylist = playlists[index - 1];\r\n    const [showNamePlaylistModal, setShowNamePlaylistModal] = useState(false);\r\n    const [trackPlay, setTrackPlay] = useState(null);\r\n    const [showRemoveTrackModal, setShowRemoveTrackModal] = useState(false);\r\n    const [trackRemove, setTrackRemove] = useState(null);\r\n    const [showRemovePlaylistModal, setShowRemovePlaylistModal] = useState(false);\r\n    const [redirectToHome, setRedirectToHome] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (trackPlay) {\r\n            const audioUrl = process.env.PUBLIC_URL + trackPlay.file;\r\n            const audioObj = new Audio(audioUrl);\r\n            audioObj.play();\r\n\r\n            return () => {\r\n                audioObj.pause();\r\n            }\r\n        }\r\n    }, [trackPlay])\r\n\r\n\r\n    const currentTracks = tracks.filter(track => currentPlaylist.tracksId.includes(track.id));\r\n\r\n    let i = 1;\r\n    let currentTrack;\r\n\r\n    function playTrack(id, value) {\r\n        if (value) {\r\n            setTrackPlay(tracks.find(track => track.id === id));\r\n        } else {\r\n            setTrackPlay(null);\r\n        }\r\n    }\r\n\r\n    function handleOnClick(track) {\r\n        setShowRemoveTrackModal(true);\r\n        setTrackRemove(track);\r\n    }\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    if (redirectToHome) {\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-playlist\">\r\n            {/* {currentPlaylist ? */}\r\n            <div className=\"icons-btn\">\r\n                <FaPlayCircle className=\"icon-btn\" />\r\n                <FaPlusCircle className=\"icon-btn\" onClick={() => setRedirectToHome(true)} />\r\n                <FaMinusCircle className=\"icon-btn\" onClick={() => setShowRemovePlaylistModal(true)} />\r\n                <FaRegEdit className=\"icon-btn\" onClick={() => setShowNamePlaylistModal(true)} />\r\n            </div>\r\n            <h1>{currentPlaylist.title}</h1>\r\n            {/* : null} */}\r\n            {currentTracks.length > 0 ?\r\n                <div className=\"playlist-tbl\">\r\n                    <Table striped bordered hover size=\"sm\" variant=\"dark\">\r\n                        <tbody>\r\n                            {currentTracks.map(track =>\r\n                                <tr>\r\n                                    <td>{i++}</td>\r\n                                    <td>{track.title}</td>\r\n                                    <td>{track.length}</td>\r\n                                    {/* <td className=\"td-btn\"><a className=\"tracks-btn\" onClick={() => playTrack(track.id, !(trackPlay && trackPlay.id === track.id))}>\r\n                                        {trackPlay && trackPlay.id === track.id ? <FaPauseCircle /> : <FaPlayCircle />}</a></td> */}\r\n                                    <td className=\"td-btn\"><a className=\"tracks-btn\" onClick={() => handleOnClick(track)}><FaMinusCircle /></a></td>\r\n                                </tr>)}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                : null}\r\n\r\n\r\n            {currentTracks.length > 0 ?\r\n                <Player trackList={currentTracks}\r\n                    includeTags={true}\r\n                    includeSearch={false}\r\n                    showPlaylist={false}\r\n                    autoPlayNextTrack={true} />\r\n                : null}\r\n\r\n            {/* <AudioPlayer\r\n                src={audio3}\r\n            /> */}\r\n\r\n            <NamePlaylistModal show={showNamePlaylistModal} onClose={() => setShowNamePlaylistModal(false)} onEdit={onEditPlaylist} playlist={currentPlaylist} />\r\n            <RemoveTrackModal show={showRemoveTrackModal} onClose={() => setShowRemoveTrackModal(false)} onRemove={onRemoveTrack} playlist={currentPlaylist} track={trackRemove} />\r\n            <RemovePlaylistModal show={showRemovePlaylistModal} onClose={() => setShowRemovePlaylistModal(false)} onRemove={onRemovePlaylist} playlist={currentPlaylist} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlaylistPage;","import React, { useState } from 'react';\r\nimport { ListGroup, Table } from 'react-bootstrap';\r\nimport { FaPlusCircle, FaRegHeart } from 'react-icons/fa';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport NewPlaylistModal from '../../components/NewPlaylistModal/NewPlaylistModal';\r\nimport PlaylistPage from '../PlaylistPage/PlaylistPage';\r\nimport './AllPlaylistsPage.css';\r\n\r\nfunction AllPlaylistsPage({ activeUser, playlists, onAddPlaylist }) {\r\n    const [showNewPlaylistModal , setShowNewPlaylistModal] = useState(false);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const userPlaylists = playlists.filter(playlist => playlist.userId === activeUser.id);\r\n\r\n    //playlist num\r\n    let i = 1;\r\n\r\n    return (\r\n        <div className=\"p-all-playlists\">\r\n            {/* <div className=\"row\"> */}\r\n                <FaPlusCircle className=\"plus-icon\" onClick={() => setShowNewPlaylistModal(true)}/>\r\n                <h1>My Playlists</h1>\r\n            {/* </div> */}\r\n            {userPlaylists.length > 0 ?\r\n                <div className=\"playlists-tbl\">\r\n                    <Table striped bordered hover size=\"sm\" variant=\"dark\">\r\n                        <tbody>\r\n                            {userPlaylists.map(playlist =>\r\n                            playlist.active ? \r\n                                <tr>\r\n                                    <td>{i++}</td>\r\n                                    <td><Link to={\"/playlist/\" + playlist.id} className=\"playlist-link\">{playlist.title}</Link></td>\r\n                                </tr>\r\n                                : null                          \r\n                                )}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                : null}\r\n                <NewPlaylistModal show={showNewPlaylistModal} onClose={() => setShowNewPlaylistModal(false)} onCreate={onAddPlaylist} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllPlaylistsPage;","import React from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './AlbumCard.css';\r\nimport AlbumPage from '../../pages/AlbumPage/AlbumPage';\r\nimport ArtistPage from '../../pages/ArtistPage/ArtistPage';\r\n\r\n\r\nfunction AlbumCard({ album , artist}) {\r\n    \r\n    const albumIndex = album.id-1;\r\n    const artistIndex = artist.id-1;\r\n\r\n    //     if (index !== undefined) {\r\n    //     return <Redirect to={'/album/' + index}/>\r\n    // }\r\n\r\n    return (\r\n        <Card className=\"album-card\">\r\n            <Card.Img className=\"album-img\" variant=\"top\" src={album.image} />\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <Link to={\"/album/\" + albumIndex} className=\"album-link\">{album.title}</Link>\r\n                </Card.Title>\r\n                <Card.Text> \r\n                    <Link to={\"/artist/\" + artistIndex} className=\"artist-link\"> {artist.name}</Link>  \r\n                    </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default AlbumCard;","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport AlbumCard from '../../components/AlbumCard/AlbumCard';\r\nimport './ArtistPage.css';\r\n\r\nfunction ArtistPage({ activeUser , artists, albums}) {\r\n    const { index } = useParams();\r\n    const currentArtist = artists[index];\r\n    const artistAlbums = albums.filter( album => album.artistId === currentArtist.id);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"p-artist\">\r\n                <div className=\"artist\">\r\n                    <h1>{currentArtist.name}</h1>\r\n                    <img className=\"artist-img\" src={currentArtist.image} />\r\n                </div>\r\n                <div className=\"artist-albums\">\r\n                {artistAlbums.length > 0 ?\r\n                    <Row>\r\n                        {artistAlbums.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={currentArtist}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArtistPage;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction FavoriteAlbumsPage({activeUser}) {\r\n    if(!activeUser){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n        <div>\r\n            FavoriteAlbumsPage\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FavoriteAlbumsPage;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction FavoriteArtistsPage({activeUser}) {\r\n    if(!activeUser){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n        <div>\r\n            FavoriteArtistsPage\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FavoriteArtistsPage;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Col, Form, Row, Spinner } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport './HomePage.css';\r\nimport AlbumCard from '../../components/AlbumCard/AlbumCard';\r\n\r\nfunction HomePage({ activeUser, albums, artists }) {\r\n    const [filterText, setFilterText] = useState(\"\");\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n   // write here code that converts the artists array into artists object\r\n    const artistsMap =[];  //.... artists;\r\n    \r\n    // for (let i=0; i<artists.length; i++){\r\n    //     // const index = i+1;\r\n    //     const artist = {i: artists[i]};\r\n    //     artistsMap.push(artist);\r\n    // }\r\n    \r\n    // debugger;\r\n\r\n    const filterArtists = artists.filter(artist => artist.name.toLowerCase().includes(filterText.toLowerCase()));\r\n    const artistsId = filterArtists.map(artist => artist.id);\r\n\r\n    const filteredAlbums = albums.filter(album => album.title.toLowerCase().includes(filterText.toLowerCase()) || artistsId.includes(album.artistId) );  \r\n\r\n\r\n    //albums by genre\r\n    const rockAlbumsCards = filteredAlbums.filter(album => album.genre === \"Rock\");\r\n    const popAlbumsCards = filteredAlbums.filter(album => album.genre === \"Pop\");\r\n    const rbAlbumsCards = filteredAlbums.filter(album => album.genre === \"R&B\");\r\n    const jazzAlbumsCards = filteredAlbums.filter(album => album.genre === \"Jazz\");\r\n\r\n    // const albumsCards = filteredAlbums.map(album => <Col sm={6} md={2} > <AlbumCard album={album} /></Col>);\r\n\r\n    return (\r\n        <div className=\"p-home\">\r\n            <div className=\"home-search\">\r\n                <h1>Find your music</h1>\r\n                <Form>\r\n                    <Form.Control type=\"text\" className=\"filter\" placeholder=\"Search album \\ artist\" value={filterText} onChange={e => setFilterText(e.target.value)} />\r\n                </Form>\r\n            </div>\r\n            <div className=\"albums-cards\">\r\n                {rockAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>Rock</h4>\r\n                        {rockAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                        {/* artist={artistsMap[album.artistId]} */}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                {popAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>Pop</h4>\r\n                        {popAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                {rbAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>R&B</h4>\r\n                        {rbAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                 {jazzAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>Jazz</h4>\r\n                        {jazzAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import { Carousel } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport './LandingPage.css';\r\nimport { GiMusicalNotes } from \"react-icons/gi\";\r\n\r\n\r\nfunction LandingPage() {\r\n\r\n    return (\r\n        <div className=\"p-landing\">\r\n            <h1>Welcome To My Music</h1>\r\n            <GiMusicalNotes className=\"notes-icon\"/>\r\n          <img src=\"\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LandingPage;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction SearchingPage({activeUser}) {\r\n    if(!activeUser){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n        <div>\r\n            SearchingPage\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchingPage;","export default __webpack_public_path__ + \"static/media/logo.27e693a3.jpg\";","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport '../MyMusicNavbar/MyMusicNavbar.css'\r\nimport logoImg from './logo.jpg';\r\nimport { GiMusicSpell } from \"react-icons/gi\";\r\n\r\n\r\nfunction MyMusicNavbar({ activeUser , onLogout }) {\r\n        return (\r\n        <Navbar variant=\"dark\" className=\"navbar navbar-bg\" expand=\"lg\">\r\n            {/* <Navbar.Brand href=\"#home\">\r\n            <img src={logoImg} width=\"60\" className=\"logo\"/>\r\n            </Navbar.Brand> */}\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"nav-display\">\r\n                <Nav className=\"mr-auto\">\r\n                < Nav.Link href=\"#home\"><img src={logoImg} width=\"60\" className=\"logo\"/></Nav.Link>\r\n                    {activeUser ? < Nav.Link className=\"navbar-link\" href=\"#all-playlists\">Playlists</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link className=\"navbar-link\" href=\"#albums\">Albums</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link className=\"navbar-link\" href=\"#artists\">Artists</Nav.Link> : null}\r\n                </Nav>\r\n                <Nav className=\"ml-auto\">\r\n                    {!activeUser ? <Nav.Link href=\"#login\">Login</Nav.Link> : null}\r\n                    {!activeUser ? <Nav.Link href=\"#signup\">Signup</Nav.Link> : null}\r\n                    {activeUser ? <Navbar.Text> Hi {activeUser.name}!</Navbar.Text>: null}\r\n                    {activeUser ? <Nav.Link href=\"#\" onClick= {() => onLogout()}>Logout</Nav.Link> : null}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar >\r\n    );\r\n}\r\n\r\nexport default MyMusicNavbar;","import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './LoginPage.css';\r\n\r\nfunction LoginPage({ users, onLogin, activeUser }) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [showInvalidLogin, setshowInvalidLogin] = useState(false);\r\n\r\n    if (activeUser) {\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n\r\n    function login(e) {\r\n        e.preventDefault();\r\n        let activeUser = null;\r\n        for (const user of users) {\r\n            if (user.login(email, password)) {\r\n                activeUser = user;\r\n                break;\r\n            }\r\n        }\r\n        if (activeUser) {\r\n            onLogin(activeUser);\r\n        } else {\r\n            setshowInvalidLogin(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-login\">\r\n            <h1>Login to My Music</h1>\r\n            <Form onSubmit={login}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n                <Button type=\"submit\">Login</Button>\r\n            </Form>\r\n            { showInvalidLogin ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\r\n            <p>Don't have an account yet ?</p>\r\n            <Button type=\"button\"><Link to=\"/signup\" className=\"signup-link\">Signup for free</Link></Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport './SignupPage.css'\r\n\r\nfunction SignupPage({addUser, activeUser}) {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    if (activeUser) {\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n\r\n    function clearForm(){\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n    }\r\n    \r\n    function createUser(){\r\n        addUser(name, email, password);\r\n        clearForm();\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-signup\">\r\n              <h1>Signup to My Music</h1>\r\n            <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Full name</Form.Label>\r\n                    <Form.Control type=\"name\" placeholder=\"Full name\" value={name} onChange={e => setName(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\" onClick={createUser}>Signup</Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignupPage;","class UserModel {\r\n    constructor(plainUser) {\r\n        this.id= plainUser.id;\r\n        this.name= plainUser.name;\r\n        this.email= plainUser.email;\r\n        this.password= plainUser.password;\r\n        this.albums= plainUser.albums;\r\n        this.artists= plainUser.artists;\r\n    }\r\n\r\n    login(email , password) {\r\n        return email.toLowerCase() === this.email.toLowerCase() && password===this.password;\r\n    }\r\n}\r\n\r\nexport default UserModel;\r\n\r\n","class AlbumModel {\r\n    constructor(plainAlbum) {\r\n        this.id= plainAlbum.id;\r\n        this.title= plainAlbum.title;\r\n        this.artistId= plainAlbum.artistId;\r\n        this.year= plainAlbum.year;\r\n        this.genre= plainAlbum.genre;\r\n        this.image= plainAlbum.image;\r\n    }\r\n\r\n}\r\n\r\nexport default AlbumModel;\r\n\r\n","class ArtistModel {\r\n    constructor(plainArtist) {\r\n        this.id= plainArtist.id;\r\n        this.name= plainArtist.name;\r\n        this.image= plainArtist.image;\r\n    }\r\n\r\n}\r\n\r\nexport default ArtistModel;\r\n","class TrackModel {\r\n    constructor(plainTrack) {\r\n        this.id= plainTrack.id;\r\n        this.title= plainTrack.title;\r\n        this.length= plainTrack.length;\r\n        this.albumId= plainTrack.albumId;\r\n        this.play = plainTrack.play;\r\n        this.file = plainTrack.file;\r\n        this.active = plainTrack.active;\r\n        \r\n        this.url = \"process.env.PUBLIC_URL+plainTrack.file\";\r\n        this.tags = [''];\r\n    }\r\n\r\n}\r\n\r\nexport default TrackModel;\r\n","class PlaylistModel {\r\n    constructor(plainPlaylist) {\r\n        this.id= plainPlaylist.id;\r\n        this.title= plainPlaylist.title;\r\n        this.userId= plainPlaylist.userId;\r\n        this.tracksId= plainPlaylist.tracksId;\r\n        this.active=plainPlaylist.active;\r\n    }\r\n\r\n}\r\n\r\nexport default PlaylistModel;\r\n","import { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport AlbumPage from './pages/AlbumPage/AlbumPage';\nimport AllPlaylistsPage from './pages/AllPlaylistsPage/AllPlaylistsPage';\nimport ArtistPage from './pages/ArtistPage/ArtistPage';\nimport FavoriteAlbumsPage from './pages/FavoriteAlbumsPage/FavoriteAlbumsPage';\nimport FavoriteArtistsPage from './pages/FavoriteArtistsPage/FavoriteArtistsPage';\nimport HomePage from './pages/HomePage/HomePage';\nimport LandingPage from './pages/LandingPage/LandingPage';\nimport PlaylistPage from './pages/PlaylistPage/PlaylistPage';\nimport SearchingPage from './pages/SearchingPage/SearchingPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MyMusicNavbar from './components/MyMusicNavbar/MyMusicNavbar';\nimport { useState } from 'react';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport './App.css';\nimport usersJSON from './data/users.json';\nimport albumsJSON from './data/albums.json';\nimport artistsJSON from './data/artists.json';\nimport tracksJSON from './data/tracks.json';\nimport playlistsJSON from './data/playlists.json';\nimport UserModel from './model/UserModel';\nimport AlbumModel from './model/AlbumModel';\nimport ArtistModel from './model/ArtistModel';\nimport TrackModel from './model/TrackModel';\nimport PlaylistModel from './model/PlaylistModel';\nimport { useEffect } from 'react';\n\n\nfunction App() {\n  const [users, setUsers] = useState(usersJSON.map(plainUser => new UserModel(plainUser)));\n  const [activeUser, setActiveUser] = useState(users[0]);\n\n  const[albums, setAlbums] = useState(albumsJSON.map(plainAlbum => new AlbumModel(plainAlbum)));\n  const[artists, setArtists] = useState(artistsJSON.map(plainArtist => new ArtistModel(plainArtist)));\n  const[tracks, setTracks] = useState(tracksJSON.map(plainTrack => new TrackModel(plainTrack)));\n  const[playlists, setPlaylists] = useState(playlistsJSON.map(plainPlaylist => new PlaylistModel (plainPlaylist)));\n\n\n  function addUser(name, email, password){\n    const newUser = new UserModel ({id: users[users.length-1].id+1, name, email, password});\n    setUsers(users.concat(newUser));\n    setActiveUser(newUser);\n  }\n\n  function handlePlayTrack(id, value) {\n    const tempTracks = [...tracks];\n    tempTracks.map(track => { if (track.id === id) { track.play = value } else {track.play = false}});\n    setTracks(tempTracks);\n  }\n\n  function addPlaylist(playlistName) {\n    const newPlaylist = new PlaylistModel({\n      id: playlists[playlists.length-1].id +1,\n      title: playlistName,\n      userId: activeUser.id\n    });\n\n    setPlaylists(playlists.concat(newPlaylist));\n  }\n\nfunction editPlaylist(id , name) {\n  const tempPlaylists = [...playlists];\n  tempPlaylists.map(playlist => { if (playlist.id === id) { playlist.title = name } });\n  setPlaylists(tempPlaylists);\n}\n\nfunction removeTrack(playlistId , trackId) {\n  const tempPlaylists = [...playlists];\n  tempPlaylists.map(playlist => { if (playlist.id === playlistId) { playlist.tracksId.splice(trackId-1, 1) } });\n  setPlaylists(tempPlaylists);\n}\n\nfunction removePlaylist(playlistId) {\n  const tempPlaylists = [...playlists];\n  tempPlaylists.map(playlist => { if (playlist.id === playlistId) { playlist.active = false } });\n  setPlaylists(tempPlaylists);\n}\n\nfunction addTrack(playlistId , track) {\n  debugger;\n  const tempPlaylists = [...playlists];\n  tempPlaylists.map(playlist => { if (playlist.id === playlistId) { playlist.tracksId.push(track.id) }});\n  setPlaylists(tempPlaylists);\n}\n\n  return (\n    <>\n    <MyMusicNavbar activeUser={activeUser} onLogout={() => setActiveUser(null)}/>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\"><LandingPage/></Route>\n          <Route exact path=\"/home\"><HomePage activeUser={activeUser} albums={albums} artists={artists}/></Route>\n          <Route exact path=\"/login\"><LoginPage users={users} onLogin={user => setActiveUser(user)} activeUser={activeUser}/></Route>\n          <Route exact path=\"/signup\"><SignupPage addUser={addUser} activeUser={activeUser}/></Route>\n          <Route exact path=\"/album/:index\"><AlbumPage \n          activeUser={activeUser}\n          albums={albums}\n          tracks={tracks}\n          artists={artists}\n          playlists={playlists}\n          handlePlayTrack={handlePlayTrack}\n          addTrack={addTrack}\n          /></Route>\n          <Route exact path=\"/search\"><SearchingPage activeUser={activeUser}/></Route>\n          <Route exact path=\"/artist/:index\"><ArtistPage activeUser={activeUser} albums={albums} artists={artists}/></Route>\n          <Route exact path=\"/all-playlists\"><AllPlaylistsPage activeUser={activeUser} playlists={playlists} onAddPlaylist={addPlaylist}/></Route>\n          <Route exact path=\"/playlist/:index\"><PlaylistPage \n          activeUser={activeUser}\n          playlists={playlists}\n          tracks={tracks}\n          handlePlayTrack={handlePlayTrack}\n          onEditPlaylist={editPlaylist}\n          onRemoveTrack={removeTrack}\n          onRemovePlaylist ={removePlaylist}\n          /></Route>\n          <Route exact path=\"/artists\"><FavoriteArtistsPage activeUser={activeUser}/></Route>\n          <Route exact path=\"/albums\"><FavoriteAlbumsPage activeUser={activeUser}/></Route>\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Container } from 'react-bootstrap';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}