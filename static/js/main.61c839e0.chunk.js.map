{"version":3,"sources":["pages/AlbumPage/Do I Wanna Know.mp3","pages/AlbumPage/R U Mine.mp3","pages/AlbumPage/One For the Road.mp3","pages/AlbumPage/Arabella.mp3","pages/AlbumPage/I Want It All.mp3","components/AddTrackToPlaylistModal/AddTrackToPlaylistModal.js","pages/AlbumPage/AlbumPage.js","components/NewPlaylistModal/NewPlaylistModal.js","components/NamePlaylistModal/NamePlaylistModal.js","components/RemoveTrackModal/RemoveTrackModal.js","components/RemovePlaylistModal/RemovePlaylistModal.js","pages/PlaylistPage/Do I Wanna Know.mp3","pages/PlaylistPage/R U Mine.mp3","pages/PlaylistPage/One For the Road.mp3","pages/PlaylistPage/Arabella.mp3","pages/PlaylistPage/I Want It All.mp3","pages/PlaylistPage/PlaylistPage.js","pages/AllPlaylistsPage/AllPlaylistsPage.js","components/AlbumCard/AlbumCard.js","pages/ArtistPage/ArtistPage.js","pages/FavoriteAlbumsPage/FavoriteAlbumsPage.js","pages/FavoriteArtistsPage/FavoriteArtistsPage.js","pages/HomePage/HomePage.js","pages/LandingPage/LandingPage.js","pages/SearchingPage/SearchingPage.js","components/MyMusicNavbar/logo.jpg","components/MyMusicNavbar/MyMusicNavbar.js","pages/LoginPage/LoginPage.js","pages/SignupPage/SignupPage.js","model/UserModel.js","model/AlbumModel.js","model/ArtistModel.js","model/TrackModel.js","model/PlaylistModel.js","App.js","reportWebVitals.js","index.js"],"names":["AddTrackToPlaylistModal","playlists","trackAdd","show","onClose","onAddTrack","useState","currPlaylist","setCurrPlaylist","Modal","className","onHide","Header","closeButton","Title","Body","Form","Group","Label","Control","as","custom","value","onChange","e","target","map","playlist","title","id","Footer","Button","variant","onClick","AlbumPage","activeUser","albums","tracks","artists","addTrack","handlePlayTrack","onEditFav","index","useParams","trackPlay","setTrackPlay","showAddTrackModal","setShowAddTrackModal","setTrackAdd","setPlay","currentAlbum","currentArtist","find","artist","artistId","albumTracks","filter","track","albumId","favAlbum","album","useEffect","audioObj","file","Audio","audio1","audio2","play","pause","i","name","year","genre","src","image","length","Table","striped","bordered","hover","size","handleAddTrack","to","NewPlaylistModal","onCreate","playlistName","setPlaylistName","Row","controlId","column","sm","Col","type","NamePlaylistModal","onEdit","RemoveTrackModal","onRemove","RemovePlaylistModal","redirectToAllPlaylists","setRedirectToAllPlaylists","PlaylistPage","onEditPlaylist","onRemoveTrack","onRemovePlaylist","currentPlaylist","showNamePlaylistModal","setShowNamePlaylistModal","showRemoveTrackModal","setShowRemoveTrackModal","trackRemove","setTrackRemove","showRemovePlaylistModal","setShowRemovePlaylistModal","redirectToHome","setRedirectToHome","demoTracks","url","tags","audio3","audio4","audio5","audioUrl","process","currentTracks","tracksId","includes","handleOnClick","trackList","includeTags","includeSearch","showPlaylist","autoPlayNextTrack","AllPlaylistsPage","onAddPlaylist","showNewPlaylistModal","setShowNewPlaylistModal","userPlaylists","userId","active","AlbumCard","albumIndex","artistIndex","Card","Img","Text","ArtistPage","artistAlbums","md","FavoriteAlbumsPage","favAlbums","indexOf","FavoriteArtistsPage","HomePage","filterText","setFilterText","artistsId","toLowerCase","filteredAlbums","rockAlbumsCards","popAlbumsCards","rbAlbumsCards","jazzAlbumsCards","placeholder","LandingPage","SearchingPage","MyMusicNavbar","onLogout","Navbar","expand","Toggle","aria-controls","Collapse","Nav","Link","href","logoImg","width","LoginPage","users","onLogin","email","setEmail","password","setPassword","showInvalidLogin","setshowInvalidLogin","onSubmit","preventDefault","user","login","Alert","SignupPage","addUser","setName","UserModel","plainUser","this","AlbumModel","plainAlbum","ArtistModel","plainArtist","TrackModel","plainTrack","PlaylistModel","plainPlaylist","App","usersJSON","setUsers","setActiveUser","albumsJSON","artistsJSON","tracksJSON","setTracks","playlistsJSON","setPlaylists","tempTracks","exact","path","newUser","concat","playlistId","tempPlaylists","push","tempUsers","splice","newPlaylist","trackId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61c839e0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Do I Wanna Know.d7ad5024.mp3\";","export default __webpack_public_path__ + \"static/media/R U Mine.77a0b8c1.mp3\";","export default __webpack_public_path__ + \"static/media/One For the Road.20b6cca8.mp3\";","export default __webpack_public_path__ + \"static/media/Arabella.a8b57991.mp3\";","export default __webpack_public_path__ + \"static/media/I Want It All.6a35bd9f.mp3\";","import React, { useState } from 'react';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\nimport './AddTrackToPlaylistModal.css';\r\n\r\nfunction AddTrackToPlaylistModal({ playlists, trackAdd, show, onClose, onAddTrack }) {\r\n    const [currPlaylist, setCurrPlaylist] = useState(playlists[0]);\r\n\r\n    function AddTrackToPlaylist() {\r\n        debugger;\r\n            onAddTrack(currPlaylist.id, trackAdd);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"m-add-track\" show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add track to your playlist</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Choose playlist</Form.Label>\r\n                        <Form.Control as=\"select\" custom value={currPlaylist} onChange={e => setCurrPlaylist(e.target.value)}>\r\n                            {playlists.map(playlist => <option key={playlist.id} >{playlist.title}</option>)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={AddTrackToPlaylist}>\r\n                    Add\r\n      </Button>\r\n\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AddTrackToPlaylistModal;","import React, { useEffect } from 'react';\r\nimport { ListGroup, Row, Spinner, Table, Button } from 'react-bootstrap';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport './AlbumPage.css';\r\nimport { FaRegHeart, FaHeart, FaPauseCircle, FaPlayCircle, FaPlusCircle } from \"react-icons/fa\";\r\nimport { useState } from 'react';\r\nimport Player from '@madzadev/audio-player';\r\nimport '@madzadev/audio-player/dist/index.css';\r\nimport audio1 from './Do I Wanna Know.mp3';\r\nimport audio2 from './R U Mine.mp3';\r\nimport audio3 from './One For the Road.mp3';\r\nimport audio4 from './Arabella.mp3';\r\nimport audio5 from './I Want It All.mp3';\r\n\r\nimport AddTrackToPlaylistModal from '../../components/AddTrackToPlaylistModal/AddTrackToPlaylistModal';\r\nimport AudioPlayer from 'react-h5-audio-player';\r\nimport 'react-h5-audio-player/lib/styles.css';\r\nimport MusicPlayer from '../../components/MusicPlayer/MusicPlayer';\r\n\r\nfunction AlbumPage({ activeUser, albums, tracks, artists, playlists, handlePlayTrack, addTrack , onEditFav}) {\r\n    const { index } = useParams();\r\n    const [trackPlay, setTrackPlay] = useState(null);\r\n    const [showAddTrackModal, setShowAddTrackModal] = useState(false);\r\n    const [trackAdd, setTrackAdd] = useState(null);\r\n    // const [autoPlay, setAutoPlay] = useState(false);\r\n    const [play, setPlay] = useState(true);\r\n\r\n    const currentAlbum = albums[index];\r\n    const currentArtist = artists.find(artist => artist.id === currentAlbum.artistId);\r\n\r\n    const albumTracks = tracks.filter(track => track.albumId === currentAlbum.id);\r\n\r\n    //checking if the album is in the favorites albums list\r\n    const favAlbum = activeUser.albums.find(album => album === currentAlbum.id);\r\n\r\n    // const[trackList,setTrackList] = useState(albumTracks);\r\n\r\n    useEffect(() => {\r\n        if (trackPlay) {\r\n\r\n            const audioUrl = trackPlay.file; //process.env.PUBLIC_URL + trackPlay.file;\r\n            let audioObj;\r\n\r\n            if (trackPlay.file === \"Do I Wanna Know.mp3\") {\r\n                audioObj = new Audio(audio1);\r\n            } else {\r\n                audioObj = new Audio(audio2);\r\n            }\r\n            audioObj.play();\r\n\r\n            setPlay(true);\r\n            // setTrackList(albumTracks.slice(trackPlay.id-1));\r\n\r\n            return () => {\r\n                audioObj.pause();\r\n                setPlay(false);\r\n                // setTrackList(albumTracks);\r\n            }\r\n        }\r\n    }, [trackPlay])\r\n\r\n\r\n    //track num\r\n    let i = 1;\r\n\r\n    // let currentTrack ; //= tracks[0]\r\n\r\n    function playTrack(id, value) {\r\n        if (value) {\r\n            setTrackPlay(tracks.find(track => track.id === id));\r\n        } else {\r\n            setTrackPlay(null);\r\n        }\r\n\r\n        // handlePlayTrack(id, value);\r\n        // //play / pause track\r\n        // currentTrack = tracks.find(track => track.id === id);\r\n        // let audioObj = new Audio(currentTrack.file);\r\n        // if (currentTrack.play) {\r\n        //     audioObj.play();\r\n        // } else {\r\n        //     audioObj.pause(); //not working\r\n        // }\r\n    }\r\n\r\n    function handleAddTrack(track) {\r\n        setShowAddTrackModal(true);\r\n        setTrackAdd(track);\r\n    }\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"p-album\">\r\n            <div className=\"album-row\">\r\n                <div className=\"album-details\">\r\n                    <h1>{currentAlbum.title}</h1>\r\n                    <h3>{currentArtist.name}</h3>\r\n                    <h5>{currentAlbum.year}</h5>\r\n                    <h5>{currentAlbum.genre}</h5>\r\n                </div>\r\n                <div className=\"album-img\">\r\n                    <img src={currentAlbum.image} />\r\n                </div>\r\n                {favAlbum ?\r\n                    <FaHeart className=\"heart\" onClick={() => onEditFav(currentAlbum.id, false)}/>\r\n                    :\r\n                    <FaRegHeart className=\"reg-heart\" onClick={() => onEditFav(currentAlbum.id, true)}/>\r\n                }\r\n            </div>\r\n\r\n            {albumTracks.length > 0 ?\r\n                <div className=\"album-row\">\r\n                    <h4>Track Listing</h4>\r\n                    <div className=\"album-tracks\">\r\n\r\n                        <Table striped bordered hover size=\"sm\" variant=\"dark\">\r\n                            <tbody>\r\n                                {albumTracks.map(track =>\r\n                                    <tr key={track.id}>\r\n                                        <td>{i++}</td>\r\n                                        <td>{track.title}</td>\r\n                                        <td>{track.length}</td>\r\n                                        <td className=\"td-btn\">\r\n                                            <a className=\"tracks-btn\" onClick={() => playTrack(track.id, !(trackPlay && trackPlay.id === track.id))}>\r\n                                                {trackPlay && trackPlay.id === track.id ? <FaPauseCircle /> : <FaPlayCircle />}\r\n                                            </a></td>\r\n                                        <td className=\"td-btn\"><FaPlusCircle className=\"tracks-btn\" onClick={() => handleAddTrack(track)} /></td>\r\n\r\n                                    </tr>)}\r\n                            </tbody>\r\n                        </Table>\r\n\r\n                    </div>\r\n                </div>\r\n                : null}\r\n\r\n            {/* {   trackPlay ? */}\r\n            {/* <AudioPlayer\r\n                    // autoPlay={autoPlay}\r\n                    src={audio3}\r\n                /> */}\r\n            {/* <MusicPlayer track={trackPlay} play={play}/> */}\r\n            {/* : null}  */}\r\n\r\n            {/* {albumTracks.length > 0 ?\r\n            <Player trackList={albumTracks}\r\n                includeTags={true}\r\n                includeSearch={false}\r\n                showPlaylist={false}\r\n                autoPlayNextTrack={true} />\r\n            : null} */}\r\n\r\n            <AddTrackToPlaylistModal show={showAddTrackModal} onClose={() => setShowAddTrackModal(false)} playlists={playlists} trackAdd={trackAdd} onAddTrack={addTrack} />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlbumPage;","import React, { useState } from 'react';\r\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport './NewPlaylistModal.css';\r\n\r\nfunction NewPlaylistModal({ show, onClose, onCreate }) {\r\n    const [playlistName , setPlaylistName] = useState(\"\");\r\n\r\n    function createPlaylist () {\r\n        setPlaylistName(\"\");\r\n        onCreate(playlistName);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"m-new-playlist\" show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add a new playlist</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"formPlaylistTitle\">\r\n                        <Form.Label column sm={3}>\r\n                            Playlist name\r\n                        </Form.Label>\r\n                        <Col sm={9}>\r\n                            <Form.Control type=\"text\" value={playlistName} onChange={e => setPlaylistName(e.target.value)}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={createPlaylist}>\r\n                    Add\r\n          </Button>\r\n\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default NewPlaylistModal;","import React, { useState } from 'react';\r\nimport { Row, Col, Form, Modal, Button } from 'react-bootstrap';\r\nimport './NamePlaylistModal.css';\r\n\r\nfunction NamePlaylistModal({ playlist , show, onClose ,onEdit }) {\r\n    const [playlistName , setPlaylistName] = useState(\"\");\r\n\r\n     function editPlaylist () {\r\n        setPlaylistName(\"\");\r\n        onEdit(playlist.id , playlistName);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"m-name-playlist\" show={show} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Rename playlist</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n                <Form.Group as={Row} controlId=\"formPlaylistTitle\">\r\n                    <Form.Label column sm={3}>\r\n                        Playlist name\r\n                    </Form.Label>\r\n                    <Col sm={9}>\r\n                        <Form.Control type=\"text\" value={playlistName} onChange={e => setPlaylistName(e.target.value)}/>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={editPlaylist}>\r\n                Save\r\n      </Button>\r\n\r\n        </Modal.Footer>\r\n    </Modal>\r\n    );\r\n}\r\n\r\nexport default NamePlaylistModal;","import React, { useState } from 'react';\r\nimport { Modal, Form, Row, Col, Button } from 'react-bootstrap';\r\nimport './RemoveTrackModal.css';\r\n\r\nfunction RemoveTrackModal({ playlist, track, show, onClose, onRemove }) {\r\n\r\n    function removeTrackFromPlaylist() {\r\n        onRemove(playlist.id , track.id);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"m-remove-track\" show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Remove this track from {playlist? playlist.title : \"\"} ?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                  {track? track.title :\"\"} \r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={removeTrackFromPlaylist}>Remove</Button>\r\n      <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default RemoveTrackModal;","import React, { useState } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport './RemovePlaylistModal.css';\r\n\r\nfunction RemovePlaylistModal({ playlist, show, onClose, onRemove }) {\r\n    const [redirectToAllPlaylists, setRedirectToAllPlaylists] = useState(false);\r\n\r\n    function removePlaylist() {\r\n        onRemove(playlist.id);\r\n        onClose();\r\n        setRedirectToAllPlaylists(true);\r\n    }\r\n\r\nif(redirectToAllPlaylists){\r\n    return <Redirect to=\"/all-playlists\" /> \r\n}\r\n\r\n    return (\r\n        <Modal className=\"m-remove-playlist\" show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Delete this playlist?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {playlist.title}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={removePlaylist}>Remove</Button>\r\n                <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default RemovePlaylistModal;","export default __webpack_public_path__ + \"static/media/Do I Wanna Know.d7ad5024.mp3\";","export default __webpack_public_path__ + \"static/media/R U Mine.77a0b8c1.mp3\";","export default __webpack_public_path__ + \"static/media/One For the Road.20b6cca8.mp3\";","export default __webpack_public_path__ + \"static/media/Arabella.a8b57991.mp3\";","export default __webpack_public_path__ + \"static/media/I Want It All.6a35bd9f.mp3\";","import React, { useEffect, useState } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { FaMinusCircle, FaPauseCircle, FaPlayCircle, FaPlusCircle, FaRegEdit } from 'react-icons/fa';\r\nimport './PlaylistPage.css';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport NamePlaylistModal from '../../components/NamePlaylistModal/NamePlaylistModal';\r\nimport RemoveTrackModal from '../../components/RemoveTrackModal/RemoveTrackModal';\r\nimport RemovePlaylistModal from '../../components/RemovePlaylistModal/RemovePlaylistModal';\r\nimport AddTrackToPlaylistModal from '../../components/AddTrackToPlaylistModal/AddTrackToPlaylistModal';\r\nimport AudioPlayer from 'react-h5-audio-player';\r\nimport 'react-h5-audio-player/lib/styles.css';\r\nimport Player from '@madzadev/audio-player';\r\nimport '@madzadev/audio-player/dist/index.css';\r\nimport audio1 from './Do I Wanna Know.mp3';\r\nimport audio2 from './R U Mine.mp3';\r\nimport audio3 from './One For the Road.mp3';\r\nimport audio4 from './Arabella.mp3';\r\nimport audio5 from './I Want It All.mp3';\r\n\r\nfunction PlaylistPage({ activeUser, playlists, tracks, handlePlayTrack, onEditPlaylist, onRemoveTrack, onRemovePlaylist }) {\r\n\r\n    const { index } = useParams();\r\n    const currentPlaylist = playlists[index - 1];\r\n    const [showNamePlaylistModal, setShowNamePlaylistModal] = useState(false);\r\n    const [trackPlay, setTrackPlay] = useState(null);\r\n    const [showRemoveTrackModal, setShowRemoveTrackModal] = useState(false);\r\n    const [trackRemove, setTrackRemove] = useState(null);\r\n    const [showRemovePlaylistModal, setShowRemovePlaylistModal] = useState(false);\r\n    const [redirectToHome, setRedirectToHome] = useState(false);\r\n\r\n\r\n    const demoTracks = [{\r\n        title: \"Do I Wanna Know\",\r\n        url: audio1,\r\n        tags: [\"\"],\r\n    },\r\n    {\r\n        title: \"R U Mine\",\r\n        url: audio2,\r\n        tags: [\"\"],\r\n    },\r\n    {\r\n        title: \"One For the Road\",\r\n        url: audio3,\r\n        tags: [\"\"],\r\n    },\r\n    {\r\n        title: \"Arabella\",\r\n        url: audio4,\r\n        tags: [\"\"],\r\n    },\r\n    {\r\n        title: \"I Want It All\",\r\n        url: audio5,\r\n        tags: [\"\"],\r\n    }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if (trackPlay) {\r\n            const audioUrl = process.env.PUBLIC_URL + trackPlay.file;\r\n            const audioObj = new Audio(audioUrl);\r\n            audioObj.play();\r\n\r\n            return () => {\r\n                audioObj.pause();\r\n            }\r\n        }\r\n    }, [trackPlay])\r\n\r\n\r\n    const currentTracks = tracks.filter(track => currentPlaylist.tracksId.includes(track.id));\r\n\r\n    let i = 1;\r\n    let currentTrack;\r\n\r\n    function playTrack(id, value) {\r\n        if (value) {\r\n            setTrackPlay(tracks.find(track => track.id === id));\r\n        } else {\r\n            setTrackPlay(null);\r\n        }\r\n    }\r\n\r\n    function handleOnClick(track) {\r\n        setShowRemoveTrackModal(true);\r\n        setTrackRemove(track);\r\n    }\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    if (redirectToHome) {\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-playlist\">\r\n            {/* {currentPlaylist ? */}\r\n            <div className=\"icons-btn\">\r\n                <FaPlayCircle className=\"icon-btn\" />\r\n                <FaPlusCircle className=\"icon-btn\" onClick={() => setRedirectToHome(true)} />\r\n                <FaMinusCircle className=\"icon-btn\" onClick={() => setShowRemovePlaylistModal(true)} />\r\n                <FaRegEdit className=\"icon-btn\" onClick={() => setShowNamePlaylistModal(true)} />\r\n            </div>\r\n            <h1>{currentPlaylist.title}</h1>\r\n            {/* : null} */}\r\n            {currentTracks.length > 0 ?\r\n                <div className=\"playlist-tbl\">\r\n                    <Table striped bordered hover size=\"sm\" variant=\"dark\">\r\n                        <tbody>\r\n                            {currentTracks.map(track =>\r\n                                <tr>\r\n                                    <td>{i++}</td>\r\n                                    <td>{track.title}</td>\r\n                                    <td>{track.length}</td>\r\n                                    {/* <td className=\"td-btn\"><a className=\"tracks-btn\" onClick={() => playTrack(track.id, !(trackPlay && trackPlay.id === track.id))}>\r\n                                        {trackPlay && trackPlay.id === track.id ? <FaPauseCircle /> : <FaPlayCircle />}</a></td> */}\r\n                                    <td className=\"td-btn\"><a className=\"tracks-btn\" onClick={() => handleOnClick(track)}><FaMinusCircle /></a></td>\r\n                                </tr>)}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                : null}\r\n\r\n\r\n            {demoTracks.length > 0 ?\r\n                <Player trackList={demoTracks}\r\n                    includeTags={true}\r\n                    includeSearch={false}\r\n                    showPlaylist={true}\r\n                    autoPlayNextTrack={true} />\r\n                : null}\r\n\r\n            {/* <AudioPlayer\r\n                src={audio3}\r\n            /> */}\r\n\r\n            <NamePlaylistModal show={showNamePlaylistModal} onClose={() => setShowNamePlaylistModal(false)} onEdit={onEditPlaylist} playlist={currentPlaylist} />\r\n            <RemoveTrackModal show={showRemoveTrackModal} onClose={() => setShowRemoveTrackModal(false)} onRemove={onRemoveTrack} playlist={currentPlaylist} track={trackRemove} />\r\n            <RemovePlaylistModal show={showRemovePlaylistModal} onClose={() => setShowRemovePlaylistModal(false)} onRemove={onRemovePlaylist} playlist={currentPlaylist} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlaylistPage;","import React, { useState } from 'react';\r\nimport { ListGroup, Table } from 'react-bootstrap';\r\nimport { FaPlusCircle, FaRegHeart } from 'react-icons/fa';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport NewPlaylistModal from '../../components/NewPlaylistModal/NewPlaylistModal';\r\nimport PlaylistPage from '../PlaylistPage/PlaylistPage';\r\nimport './AllPlaylistsPage.css';\r\n\r\nfunction AllPlaylistsPage({ activeUser, playlists, onAddPlaylist }) {\r\n    const [showNewPlaylistModal , setShowNewPlaylistModal] = useState(false);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const userPlaylists = playlists.filter(playlist => playlist.userId === activeUser.id);\r\n\r\n    //playlist num\r\n    let i = 1;\r\n\r\n    return (\r\n        <div className=\"p-all-playlists\">\r\n            {/* <div className=\"row\"> */}\r\n                <FaPlusCircle className=\"plus-icon\" onClick={() => setShowNewPlaylistModal(true)}/>\r\n                <h1>My Playlists</h1>\r\n            {/* </div> */}\r\n            {userPlaylists.length > 0 ?\r\n                <div className=\"playlists-tbl\">\r\n                    <Table striped bordered hover size=\"sm\" variant=\"dark\">\r\n                        <tbody>\r\n                            {userPlaylists.map(playlist =>\r\n                            playlist.active ? \r\n                                <tr>\r\n                                    <td>{i++}</td>\r\n                                    <td><Link to={\"/playlist/\" + playlist.id} className=\"playlist-link\">{playlist.title}</Link></td>\r\n                                </tr>\r\n                                : null                          \r\n                                )}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                : null}\r\n                <NewPlaylistModal show={showNewPlaylistModal} onClose={() => setShowNewPlaylistModal(false)} onCreate={onAddPlaylist} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllPlaylistsPage;","import React from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './AlbumCard.css';\r\nimport AlbumPage from '../../pages/AlbumPage/AlbumPage';\r\nimport ArtistPage from '../../pages/ArtistPage/ArtistPage';\r\n\r\n\r\nfunction AlbumCard({ album , artist}) {\r\n    \r\n    const albumIndex = album.id-1;\r\n    const artistIndex = artist.id-1;\r\n\r\n    //     if (index !== undefined) {\r\n    //     return <Redirect to={'/album/' + index}/>\r\n    // }\r\n\r\n    return (\r\n        <Card className=\"album-card\">\r\n            <Card.Img className=\"album-img\" variant=\"top\" src={album.image} />\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <Link to={\"/album/\" + albumIndex} className=\"album-link\">{album.title}</Link>\r\n                </Card.Title>\r\n                <Card.Text> \r\n                    <Link to={\"/artist/\" + artistIndex} className=\"artist-link\"> {artist.name}</Link>  \r\n                    </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default AlbumCard;","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport AlbumCard from '../../components/AlbumCard/AlbumCard';\r\nimport './ArtistPage.css';\r\n\r\nfunction ArtistPage({ activeUser , artists, albums}) {\r\n    const { index } = useParams();\r\n    const currentArtist = artists[index];\r\n    const artistAlbums = albums.filter( album => album.artistId === currentArtist.id);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"p-artist\">\r\n                <div className=\"artist\">\r\n                    <h1>{currentArtist.name}</h1>\r\n                    <img className=\"artist-img\" src={currentArtist.image} />\r\n                </div>\r\n                <div className=\"artist-albums\">\r\n                {artistAlbums.length > 0 ?\r\n                    <Row>\r\n                        {artistAlbums.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={currentArtist}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArtistPage;","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { FaHeart } from 'react-icons/fa';\r\nimport { Redirect } from 'react-router';\r\nimport AlbumCard from '../../components/AlbumCard/AlbumCard';\r\nimport './FavoriteAlbumsPage.css';\r\n\r\nfunction FavoriteAlbumsPage({ activeUser, albums, artists }) {\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const favAlbums = albums.filter(album => activeUser.albums.indexOf(album.id) !== -1);\r\n\r\n    return (\r\n        <div className=\"p-fav-albums\">\r\n            <h1>My Favorite Albums</h1>\r\n            {favAlbums.length > 0 ?\r\n                <Row>\r\n                    {favAlbums.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)} /> </Col>)}\r\n                 \r\n                </Row> :\r\n                null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FavoriteAlbumsPage;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction FavoriteArtistsPage({activeUser}) {\r\n    if(!activeUser){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n        <div>\r\n            FavoriteArtistsPage\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FavoriteArtistsPage;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Col, Form, Row, Spinner } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport './HomePage.css';\r\nimport AlbumCard from '../../components/AlbumCard/AlbumCard';\r\n\r\nfunction HomePage({ activeUser, albums, artists }) {\r\n    const [filterText, setFilterText] = useState(\"\");\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n   // write here code that converts the artists array into artists object\r\n    const artistsMap =[];  //.... artists;\r\n    \r\n    // for (let i=0; i<artists.length; i++){\r\n    //     // const index = i+1;\r\n    //     const artist = {i: artists[i]};\r\n    //     artistsMap.push(artist);\r\n    // }\r\n    \r\n    // debugger;\r\n\r\n    const filterArtists = artists.filter(artist => artist.name.toLowerCase().includes(filterText.toLowerCase()));\r\n    const artistsId = filterArtists.map(artist => artist.id);\r\n\r\n    const filteredAlbums = albums.filter(album => album.title.toLowerCase().includes(filterText.toLowerCase()) || artistsId.includes(album.artistId) );  \r\n\r\n\r\n    //albums by genre\r\n    const rockAlbumsCards = filteredAlbums.filter(album => album.genre === \"Rock\");\r\n    const popAlbumsCards = filteredAlbums.filter(album => album.genre === \"Pop\");\r\n    const rbAlbumsCards = filteredAlbums.filter(album => album.genre === \"R&B\");\r\n    const jazzAlbumsCards = filteredAlbums.filter(album => album.genre === \"Jazz\");\r\n\r\n    // const albumsCards = filteredAlbums.map(album => <Col sm={6} md={2} > <AlbumCard album={album} /></Col>);\r\n\r\n    return (\r\n        <div className=\"p-home\">\r\n            <div className=\"home-search\">\r\n                <h1>Find your music</h1>\r\n                <Form>\r\n                    <Form.Control type=\"text\" className=\"filter\" placeholder=\"Search album \\ artist\" value={filterText} onChange={e => setFilterText(e.target.value)} />\r\n                </Form>\r\n            </div>\r\n            <div className=\"albums-cards\">\r\n                {rockAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>Rock</h4>\r\n                        {rockAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                        {/* artist={artistsMap[album.artistId]} */}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                {popAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>Pop</h4>\r\n                        {popAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                {rbAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>R&B</h4>\r\n                        {rbAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n                 {jazzAlbumsCards.length > 0 ?\r\n                    <Row>\r\n                        <h4>Jazz</h4>\r\n                        {jazzAlbumsCards.map(album => <Col sm={6} md={2} > <AlbumCard album={album} artist={artists.find(artist => artist.id === album.artistId)}/></Col>)}\r\n                    </Row> :\r\n                    null\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import { Carousel } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport './LandingPage.css';\r\nimport { GiMusicalNotes } from \"react-icons/gi\";\r\n\r\n\r\nfunction LandingPage() {\r\n\r\n    return (\r\n        <div className=\"p-landing\">\r\n            <h1>Welcome To My Music</h1>\r\n            <GiMusicalNotes className=\"notes-icon\"/>\r\n          <img src=\"\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LandingPage;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction SearchingPage({activeUser}) {\r\n    if(!activeUser){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n        <div>\r\n            SearchingPage\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchingPage;","export default __webpack_public_path__ + \"static/media/logo.27e693a3.jpg\";","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport '../MyMusicNavbar/MyMusicNavbar.css'\r\nimport logoImg from './logo.jpg';\r\nimport { GiMusicSpell } from \"react-icons/gi\";\r\n\r\n\r\nfunction MyMusicNavbar({ activeUser , onLogout }) {\r\n        return (\r\n        <Navbar variant=\"dark\" className=\"navbar navbar-bg\" expand=\"lg\">\r\n            {/* <Navbar.Brand href=\"#home\">\r\n            <img src={logoImg} width=\"60\" className=\"logo\"/>\r\n            </Navbar.Brand> */}\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"nav-display\">\r\n                <Nav className=\"mr-auto\">\r\n                < Nav.Link href=\"#home\"><img src={logoImg} width=\"60\" className=\"logo\"/></Nav.Link>\r\n                    {activeUser ? < Nav.Link className=\"navbar-link\" href=\"#all-playlists\">Playlists</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link className=\"navbar-link\" href=\"#albums\">Albums</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link className=\"navbar-link\" href=\"#artists\">Artists</Nav.Link> : null}\r\n                </Nav>\r\n                <Nav className=\"ml-auto\">\r\n                    {!activeUser ? <Nav.Link href=\"#login\">Login</Nav.Link> : null}\r\n                    {!activeUser ? <Nav.Link href=\"#signup\">Signup</Nav.Link> : null}\r\n                    {activeUser ? <Navbar.Text> Hi {activeUser.name}!</Navbar.Text>: null}\r\n                    {activeUser ? <Nav.Link href=\"#\" onClick= {() => onLogout()}>Logout</Nav.Link> : null}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar >\r\n    );\r\n}\r\n\r\nexport default MyMusicNavbar;","import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './LoginPage.css';\r\n\r\nfunction LoginPage({ users, onLogin, activeUser }) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [showInvalidLogin, setshowInvalidLogin] = useState(false);\r\n\r\n    if (activeUser) {\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n\r\n    function login(e) {\r\n        e.preventDefault();\r\n        let activeUser = null;\r\n        for (const user of users) {\r\n            if (user.login(email, password)) {\r\n                activeUser = user;\r\n                break;\r\n            }\r\n        }\r\n        if (activeUser) {\r\n            onLogin(activeUser);\r\n        } else {\r\n            setshowInvalidLogin(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-login\">\r\n            <h1>Login to My Music</h1>\r\n            <Form onSubmit={login}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n                <Button type=\"submit\">Login</Button>\r\n            </Form>\r\n            { showInvalidLogin ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\r\n            <p>Don't have an account yet ?</p>\r\n            <Button type=\"button\"><Link to=\"/signup\" className=\"signup-link\">Signup for free</Link></Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport './SignupPage.css'\r\n\r\nfunction SignupPage({addUser, activeUser}) {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    if (activeUser) {\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n\r\n    function clearForm(){\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n    }\r\n    \r\n    function createUser(){\r\n        addUser(name, email, password);\r\n        clearForm();\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-signup\">\r\n              <h1>Signup to My Music</h1>\r\n            <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Full name</Form.Label>\r\n                    <Form.Control type=\"name\" placeholder=\"Full name\" value={name} onChange={e => setName(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\" onClick={createUser}>Signup</Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignupPage;","class UserModel {\r\n    constructor(plainUser) {\r\n        this.id= plainUser.id;\r\n        this.name= plainUser.name;\r\n        this.email= plainUser.email;\r\n        this.password= plainUser.password;\r\n        this.albums= plainUser.albums;\r\n        this.artists= plainUser.artists;\r\n    }\r\n\r\n    login(email , password) {\r\n        return email.toLowerCase() === this.email.toLowerCase() && password===this.password;\r\n    }\r\n}\r\n\r\nexport default UserModel;\r\n\r\n","class AlbumModel {\r\n    constructor(plainAlbum) {\r\n        this.id= plainAlbum.id;\r\n        this.title= plainAlbum.title;\r\n        this.artistId= plainAlbum.artistId;\r\n        this.year= plainAlbum.year;\r\n        this.genre= plainAlbum.genre;\r\n        this.image= plainAlbum.image;\r\n    }\r\n\r\n}\r\n\r\nexport default AlbumModel;\r\n\r\n","class ArtistModel {\r\n    constructor(plainArtist) {\r\n        this.id= plainArtist.id;\r\n        this.name= plainArtist.name;\r\n        this.image= plainArtist.image;\r\n    }\r\n\r\n}\r\n\r\nexport default ArtistModel;\r\n","class TrackModel {\r\n    constructor(plainTrack) {\r\n        this.id= plainTrack.id;\r\n        this.title= plainTrack.title;\r\n        this.length= plainTrack.length;\r\n        this.albumId= plainTrack.albumId;\r\n        this.play = plainTrack.play;\r\n        this.file = plainTrack.file;\r\n        this.active = plainTrack.active;\r\n        \r\n        this.url = \"process.env.PUBLIC_URL+plainTrack.file\";\r\n        this.tags = [''];\r\n    }\r\n\r\n}\r\n\r\nexport default TrackModel;\r\n","class PlaylistModel {\r\n    constructor(plainPlaylist) {\r\n        this.id= plainPlaylist.id;\r\n        this.title= plainPlaylist.title;\r\n        this.userId= plainPlaylist.userId;\r\n        this.tracksId= plainPlaylist.tracksId;\r\n        this.active=plainPlaylist.active;\r\n    }\r\n\r\n}\r\n\r\nexport default PlaylistModel;\r\n","import { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport AlbumPage from './pages/AlbumPage/AlbumPage';\nimport AllPlaylistsPage from './pages/AllPlaylistsPage/AllPlaylistsPage';\nimport ArtistPage from './pages/ArtistPage/ArtistPage';\nimport FavoriteAlbumsPage from './pages/FavoriteAlbumsPage/FavoriteAlbumsPage';\nimport FavoriteArtistsPage from './pages/FavoriteArtistsPage/FavoriteArtistsPage';\nimport HomePage from './pages/HomePage/HomePage';\nimport LandingPage from './pages/LandingPage/LandingPage';\nimport PlaylistPage from './pages/PlaylistPage/PlaylistPage';\nimport SearchingPage from './pages/SearchingPage/SearchingPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MyMusicNavbar from './components/MyMusicNavbar/MyMusicNavbar';\nimport { useState } from 'react';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport './App.css';\nimport usersJSON from './data/users.json';\nimport albumsJSON from './data/albums.json';\nimport artistsJSON from './data/artists.json';\nimport tracksJSON from './data/tracks.json';\nimport playlistsJSON from './data/playlists.json';\nimport UserModel from './model/UserModel';\nimport AlbumModel from './model/AlbumModel';\nimport ArtistModel from './model/ArtistModel';\nimport TrackModel from './model/TrackModel';\nimport PlaylistModel from './model/PlaylistModel';\nimport { useEffect } from 'react';\n\n\nfunction App() {\n  const [users, setUsers] = useState(usersJSON.map(plainUser => new UserModel(plainUser)));\n  const [activeUser, setActiveUser] = useState(users[0]);\n\n  const [albums, setAlbums] = useState(albumsJSON.map(plainAlbum => new AlbumModel(plainAlbum)));\n  const [artists, setArtists] = useState(artistsJSON.map(plainArtist => new ArtistModel(plainArtist)));\n  const [tracks, setTracks] = useState(tracksJSON.map(plainTrack => new TrackModel(plainTrack)));\n  const [playlists, setPlaylists] = useState(playlistsJSON.map(plainPlaylist => new PlaylistModel(plainPlaylist)));\n\n\n  function addUser(name, email, password) {\n    const newUser = new UserModel({ id: users[users.length - 1].id + 1, name, email, password });\n    setUsers(users.concat(newUser));\n    setActiveUser(newUser);\n  }\n\n  function handlePlayTrack(id, value) {\n    const tempTracks = [...tracks];\n    tempTracks.map(track => { if (track.id === id) { track.play = value } else { track.play = false } });\n    setTracks(tempTracks);\n  }\n\n  function addPlaylist(playlistName) {\n    const newPlaylist = new PlaylistModel({\n      id: playlists[playlists.length - 1].id + 1,\n      title: playlistName,\n      userId: activeUser.id\n    });\n\n    setPlaylists(playlists.concat(newPlaylist));\n  }\n\n  function editPlaylist(id, name) {\n    const tempPlaylists = [...playlists];\n    tempPlaylists.map(playlist => { if (playlist.id === id) { playlist.title = name } });\n    setPlaylists(tempPlaylists);\n  }\n\n  function removeTrack(playlistId, trackId) {\n    const tempPlaylists = [...playlists];\n    tempPlaylists.map(playlist => { if (playlist.id === playlistId) { playlist.tracksId.splice(trackId - 1, 1) } });\n    setPlaylists(tempPlaylists);\n  }\n\n  function removePlaylist(playlistId) {\n    const tempPlaylists = [...playlists];\n    tempPlaylists.map(playlist => { if (playlist.id === playlistId) { playlist.active = false } });\n    setPlaylists(tempPlaylists);\n  }\n\n  function addTrack(playlistId, track) {\n    debugger;\n    const tempPlaylists = [...playlists];\n    tempPlaylists.map(playlist => { if (playlist.id === playlistId) { playlist.tracksId.push(track.id) } });\n    setPlaylists(tempPlaylists);\n  }\n\n  function editFav(albumId, value) {\n    const tempUsers = [...users];\n    if (value) {\n      tempUsers.map(user => { if (user.id === activeUser.id) { user.albums.push(albumId) } });\n    } else {\n      tempUsers.map(user => {\n        if (user.id === activeUser.id) {\n          user.albums.map(album => {\n            if (album === albumId) { user.albums.splice(user.albums.indexOf(album), 1) }});\n        }\n      });\n    }\n    setUsers(tempUsers);\n  }\n\n  return (\n    <>\n      <MyMusicNavbar activeUser={activeUser} onLogout={() => setActiveUser(null)} />\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\"><LandingPage /></Route>\n          <Route exact path=\"/home\"><HomePage activeUser={activeUser} albums={albums} artists={artists} /></Route>\n          <Route exact path=\"/login\"><LoginPage users={users} onLogin={user => setActiveUser(user)} activeUser={activeUser} /></Route>\n          <Route exact path=\"/signup\"><SignupPage addUser={addUser} activeUser={activeUser} /></Route>\n          <Route exact path=\"/album/:index\"><AlbumPage\n            activeUser={activeUser}\n            albums={albums}\n            tracks={tracks}\n            artists={artists}\n            playlists={playlists}\n            handlePlayTrack={handlePlayTrack}\n            addTrack={addTrack}\n            onEditFav={editFav}\n          /></Route>\n          <Route exact path=\"/search\"><SearchingPage activeUser={activeUser} /></Route>\n          <Route exact path=\"/artist/:index\"><ArtistPage activeUser={activeUser} albums={albums} artists={artists} /></Route>\n          <Route exact path=\"/all-playlists\"><AllPlaylistsPage activeUser={activeUser} playlists={playlists} onAddPlaylist={addPlaylist} /></Route>\n          <Route exact path=\"/playlist/:index\"><PlaylistPage\n            activeUser={activeUser}\n            playlists={playlists}\n            tracks={tracks}\n            handlePlayTrack={handlePlayTrack}\n            onEditPlaylist={editPlaylist}\n            onRemoveTrack={removeTrack}\n            onRemovePlaylist={removePlaylist}\n          /></Route>\n          <Route exact path=\"/artists\"><FavoriteArtistsPage activeUser={activeUser} /></Route>\n          <Route exact path=\"/albums\"><FavoriteAlbumsPage activeUser={activeUser} albums={albums} artists={artists} /></Route>\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Container } from 'react-bootstrap';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}